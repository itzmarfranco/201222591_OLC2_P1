
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOR_BleftAND_BleftORleftANDleftPLUSMINUSleftMULTIPLYDIVIDEABS AND AND_B ARRAY ASSIGN AVAR CHAR COLON COMMA COMMENT DECIMAL DIVIDE EQUAL EXIT FLOAT GOTO GREATER GREATER_EQUAL IF INT INTEGER LESS LESS_EQUAL L_BRACKET L_PAR MAIN MINUS MULTIPLY NAME NOT NOT_B NOT_EQUAL OR OR_B PLUS PRINT QUOTE_1 QUOTE_2 RAVAR READ REMAINDER R_BRACKET R_PAR SEMICOLON SHIFT_L SHIFT_R SPVAR STRING SVAR TVAR UNSET VVAR XOR XOR_B\n    start : MAIN COLON body\n    \n    body : goto body\n        | unset body\n        | print body\n        | exit body\n        | tag body\n        | if body\n        | assign body\n        | declaration body\n    \n    body : empty\n    \n    goto : GOTO NAME SEMICOLON\n    \n    unset : UNSET L_PAR TVAR R_PAR SEMICOLON\n        | UNSET L_PAR AVAR R_PAR SEMICOLON\n        | UNSET L_PAR VVAR R_PAR SEMICOLON\n        | UNSET L_PAR SVAR R_PAR SEMICOLON\n        | UNSET L_PAR SPVAR R_PAR SEMICOLON\n        | UNSET L_PAR RAVAR R_PAR SEMICOLON\n    \n    print : PRINT L_PAR TVAR R_PAR SEMICOLON\n        | PRINT L_PAR AVAR R_PAR SEMICOLON\n        | PRINT L_PAR VVAR R_PAR SEMICOLON\n        | PRINT L_PAR SVAR R_PAR SEMICOLON\n        | PRINT L_PAR SPVAR R_PAR SEMICOLON\n        | PRINT L_PAR RAVAR R_PAR SEMICOLON\n    \n    exit : EXIT SEMICOLON\n    \n    tag : NAME COLON\n    \n    if : IF L_PAR condition R_PAR GOTO NAME SEMICOLON\n    \n    condition : condition AND condition\n        | condition OR condition\n    \n    condition : NOT condition\n    \n    condition : relational\n    \n    relational : arithmetic EQUAL arithmetic\n        | arithmetic NOT_EQUAL arithmetic\n        | arithmetic GREATER arithmetic\n        | arithmetic LESS arithmetic\n        | arithmetic GREATER_EQUAL arithmetic\n        | arithmetic LESS_EQUAL arithmetic\n    \n    relational : arithmetic\n    \n    arithmetic : arithmetic PLUS arithmetic\n        | arithmetic MINUS arithmetic\n        | arithmetic MULTIPLY arithmetic\n        | arithmetic DIVIDE arithmetic\n        | arithmetic REMAINDER arithmetic\n    \n    arithmetic : INTEGER\n        | DECIMAL\n        | STRING\n        | var\n    \n    var : TVAR\n        | AVAR\n        | VVAR\n        | SVAR\n        | RAVAR\n        | SPVAR\n    \n    assign : TVAR ASSIGN condition SEMICOLON\n        | AVAR ASSIGN condition SEMICOLON\n        | VVAR ASSIGN condition SEMICOLON\n        | SVAR ASSIGN condition SEMICOLON\n    \n    assign : TVAR ASSIGN conversion SEMICOLON\n        | AVAR ASSIGN conversion SEMICOLON\n        | VVAR ASSIGN conversion SEMICOLON\n        | SVAR ASSIGN conversion SEMICOLON\n    \n    assign : TVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n        | AVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n        | VVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n        | SVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n    \n    assign : TVAR ASSIGN bitwise SEMICOLON\n        | AVAR ASSIGN bitwise SEMICOLON\n        | VVAR ASSIGN bitwise SEMICOLON\n        | SVAR ASSIGN bitwise SEMICOLON\n    \n    bitwise : var AND_B var\n        | var OR_B var\n        | var XOR_B var\n        | var SHIFT_L var\n        | var SHIFT_R var\n    \n    bitwise : NOT_B TVAR\n        | NOT_B AVAR\n        | NOT_B VVAR\n        | NOT_B SVAR\n    \n    conversion : L_PAR type R_PAR var\n    \n    type : INT\n        | FLOAT\n        | CHAR\n    \n    declaration : var\n    \n    declaration : TVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n        | AVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n        | VVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n        | SVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n    \n    empty :\n    '
    
_lr_action_items = {'MAIN':([0,],[2,]),'$end':([1,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,21,22,26,27,28,29,30,31,32,33,34,36,43,45,99,102,108,131,132,134,136,137,139,141,142,144,153,154,155,156,157,158,186,187,188,189,190,191,193,195,196,197,198,199,200,201,203,],[0,-87,-1,-87,-87,-87,-87,-87,-87,-87,-87,-10,-47,-48,-49,-50,-52,-51,-82,-2,-3,-4,-5,-6,-7,-8,-9,-25,-24,-11,-53,-57,-65,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'COLON':([2,15,],[3,36,]),'GOTO':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,43,45,99,102,108,131,132,134,136,137,139,141,142,144,152,153,154,155,156,157,158,186,187,188,189,190,191,193,195,196,197,198,199,200,201,203,],[14,14,14,14,14,14,14,14,14,-47,-48,-49,-50,-52,-51,-82,-25,-24,-11,-53,-57,-65,-54,-58,-66,-55,-59,-67,-56,-60,-68,192,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'UNSET':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,43,45,99,102,108,131,132,134,136,137,139,141,142,144,153,154,155,156,157,158,186,187,188,189,190,191,193,195,196,197,198,199,200,201,203,],[16,16,16,16,16,16,16,16,16,-47,-48,-49,-50,-52,-51,-82,-25,-24,-11,-53,-57,-65,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'PRINT':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,43,45,99,102,108,131,132,134,136,137,139,141,142,144,153,154,155,156,157,158,186,187,188,189,190,191,193,195,196,197,198,199,200,201,203,],[23,23,23,23,23,23,23,23,23,-47,-48,-49,-50,-52,-51,-82,-25,-24,-11,-53,-57,-65,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'EXIT':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,43,45,99,102,108,131,132,134,136,137,139,141,142,144,153,154,155,156,157,158,186,187,188,189,190,191,193,195,196,197,198,199,200,201,203,],[24,24,24,24,24,24,24,24,24,-47,-48,-49,-50,-52,-51,-82,-25,-24,-11,-53,-57,-65,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'NAME':([3,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,26,36,43,45,99,102,108,131,132,134,136,137,139,141,142,144,153,154,155,156,157,158,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,203,],[15,15,15,15,15,15,15,15,15,35,-47,-48,-49,-50,-52,-51,-82,-25,-24,-11,-53,-57,-65,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,202,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'IF':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,43,45,99,102,108,131,132,134,136,137,139,141,142,144,153,154,155,156,157,158,186,187,188,189,190,191,193,195,196,197,198,199,200,201,203,],[25,25,25,25,25,25,25,25,25,-47,-48,-49,-50,-52,-51,-82,-25,-24,-11,-53,-57,-65,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'TVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,59,62,99,100,101,102,108,111,112,113,114,115,120,121,122,123,124,125,126,127,128,129,130,131,132,134,136,137,139,141,142,144,153,154,155,156,157,158,162,186,187,188,189,190,191,193,195,196,197,198,199,200,201,203,],[17,17,17,17,17,17,17,17,17,-47,-48,-49,-50,-52,-51,-82,-25,46,52,52,52,52,85,-24,52,-11,52,116,-53,52,52,-57,-65,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,52,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'AVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,59,62,99,100,101,102,108,111,112,113,114,115,120,121,122,123,124,125,126,127,128,129,130,131,132,134,136,137,139,141,142,144,153,154,155,156,157,158,162,186,187,188,189,190,191,193,195,196,197,198,199,200,201,203,],[18,18,18,18,18,18,18,18,18,-47,-48,-49,-50,-52,-51,-82,-25,47,63,63,63,63,86,-24,63,-11,63,117,-53,63,63,-57,-65,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,63,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'VVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,59,62,99,100,101,102,108,111,112,113,114,115,120,121,122,123,124,125,126,127,128,129,130,131,132,134,136,137,139,141,142,144,153,154,155,156,157,158,162,186,187,188,189,190,191,193,195,196,197,198,199,200,201,203,],[19,19,19,19,19,19,19,19,19,-47,-48,-49,-50,-52,-51,-82,-25,48,64,64,64,64,87,-24,64,-11,64,118,-53,64,64,-57,-65,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,64,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'SVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,59,62,99,100,101,102,108,111,112,113,114,115,120,121,122,123,124,125,126,127,128,129,130,131,132,134,136,137,139,141,142,144,153,154,155,156,157,158,162,186,187,188,189,190,191,193,195,196,197,198,199,200,201,203,],[20,20,20,20,20,20,20,20,20,-47,-48,-49,-50,-52,-51,-82,-25,49,65,65,65,65,88,-24,65,-11,65,119,-53,65,65,-57,-65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,65,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'RAVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,59,99,100,101,102,108,111,112,113,114,115,120,121,122,123,124,125,126,127,128,129,130,131,132,134,136,137,139,141,142,144,153,154,155,156,157,158,162,186,187,188,189,190,191,193,195,196,197,198,199,200,201,203,],[22,22,22,22,22,22,22,22,22,-47,-48,-49,-50,-52,-51,-82,-25,51,22,22,22,22,90,-24,22,-11,22,-53,22,22,-57,-65,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,22,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'SPVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,59,99,100,101,102,108,111,112,113,114,115,120,121,122,123,124,125,126,127,128,129,130,131,132,134,136,137,139,141,142,144,153,154,155,156,157,158,162,186,187,188,189,190,191,193,195,196,197,198,199,200,201,203,],[21,21,21,21,21,21,21,21,21,-47,-48,-49,-50,-52,-51,-82,-25,50,21,21,21,21,89,-24,21,-11,21,-53,21,21,-57,-65,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,21,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'L_PAR':([16,23,25,38,39,40,41,55,58,72,74,77,79,82,84,],[37,42,44,56,56,56,56,103,109,133,135,138,140,143,145,]),'ASSIGN':([17,18,19,20,],[38,39,40,41,]),'AND_B':([21,22,52,61,63,64,65,],[-52,-51,-47,111,-48,-49,-50,]),'OR_B':([21,22,52,61,63,64,65,],[-52,-51,-47,112,-48,-49,-50,]),'XOR_B':([21,22,52,61,63,64,65,],[-52,-51,-47,113,-48,-49,-50,]),'SHIFT_L':([21,22,52,61,63,64,65,],[-52,-51,-47,114,-48,-49,-50,]),'SHIFT_R':([21,22,52,61,63,64,65,],[-52,-51,-47,115,-48,-49,-50,]),'EQUAL':([21,22,52,61,63,64,65,66,67,68,69,92,175,176,177,178,179,],[-52,-51,-47,-46,-48,-49,-50,120,-43,-44,-45,-46,-38,-39,-40,-41,-42,]),'NOT_EQUAL':([21,22,52,61,63,64,65,66,67,68,69,92,175,176,177,178,179,],[-52,-51,-47,-46,-48,-49,-50,121,-43,-44,-45,-46,-38,-39,-40,-41,-42,]),'GREATER':([21,22,52,61,63,64,65,66,67,68,69,92,175,176,177,178,179,],[-52,-51,-47,-46,-48,-49,-50,122,-43,-44,-45,-46,-38,-39,-40,-41,-42,]),'LESS':([21,22,52,61,63,64,65,66,67,68,69,92,175,176,177,178,179,],[-52,-51,-47,-46,-48,-49,-50,123,-43,-44,-45,-46,-38,-39,-40,-41,-42,]),'GREATER_EQUAL':([21,22,52,61,63,64,65,66,67,68,69,92,175,176,177,178,179,],[-52,-51,-47,-46,-48,-49,-50,124,-43,-44,-45,-46,-38,-39,-40,-41,-42,]),'LESS_EQUAL':([21,22,52,61,63,64,65,66,67,68,69,92,175,176,177,178,179,],[-52,-51,-47,-46,-48,-49,-50,125,-43,-44,-45,-46,-38,-39,-40,-41,-42,]),'PLUS':([21,22,52,61,63,64,65,66,67,68,69,92,169,170,171,172,173,174,175,176,177,178,179,],[-52,-51,-47,-46,-48,-49,-50,126,-43,-44,-45,-46,126,126,126,126,126,126,-38,-39,-40,-41,126,]),'MINUS':([21,22,52,61,63,64,65,66,67,68,69,92,169,170,171,172,173,174,175,176,177,178,179,],[-52,-51,-47,-46,-48,-49,-50,127,-43,-44,-45,-46,127,127,127,127,127,127,-38,-39,-40,-41,127,]),'MULTIPLY':([21,22,52,61,63,64,65,66,67,68,69,92,169,170,171,172,173,174,175,176,177,178,179,],[-52,-51,-47,-46,-48,-49,-50,128,-43,-44,-45,-46,128,128,128,128,128,128,128,128,-40,-41,128,]),'DIVIDE':([21,22,52,61,63,64,65,66,67,68,69,92,169,170,171,172,173,174,175,176,177,178,179,],[-52,-51,-47,-46,-48,-49,-50,129,-43,-44,-45,-46,129,129,129,129,129,129,129,129,-40,-41,129,]),'REMAINDER':([21,22,52,61,63,64,65,66,67,68,69,92,169,170,171,172,173,174,175,176,177,178,179,],[-52,-51,-47,-46,-48,-49,-50,130,-43,-44,-45,-46,130,130,130,130,130,130,-38,-39,-40,-41,130,]),'SEMICOLON':([21,22,24,35,52,53,54,57,60,61,63,64,65,66,67,68,69,70,71,73,75,76,78,80,81,83,92,93,94,95,96,97,98,110,116,117,118,119,146,147,148,149,150,151,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,194,202,],[-52,-51,43,45,-47,99,102,108,-30,-46,-48,-49,-50,-37,-43,-44,-45,131,132,134,136,137,139,141,142,144,-46,153,154,155,156,157,158,-29,-74,-75,-76,-77,186,187,188,189,190,191,-27,-28,193,195,-69,-70,-71,-72,-73,-31,-32,-33,-34,-35,-36,-38,-39,-40,-41,-42,196,197,198,199,200,201,-78,203,]),'AND':([21,22,52,53,60,61,63,64,65,66,67,68,69,70,75,80,91,92,110,159,160,169,170,171,172,173,174,175,176,177,178,179,],[-52,-51,-47,100,-30,-46,-48,-49,-50,-37,-43,-44,-45,100,100,100,100,-46,100,-27,100,-31,-32,-33,-34,-35,-36,-38,-39,-40,-41,-42,]),'OR':([21,22,52,53,60,61,63,64,65,66,67,68,69,70,75,80,91,92,110,159,160,169,170,171,172,173,174,175,176,177,178,179,],[-52,-51,-47,101,-30,-46,-48,-49,-50,-37,-43,-44,-45,101,101,101,101,-46,101,-27,-28,-31,-32,-33,-34,-35,-36,-38,-39,-40,-41,-42,]),'R_PAR':([21,22,46,47,48,49,50,51,52,60,63,64,65,66,67,68,69,85,86,87,88,89,90,91,92,103,104,105,106,107,109,110,133,135,138,140,143,145,159,160,169,170,171,172,173,174,175,176,177,178,179,],[-52,-51,93,94,95,96,97,98,-47,-30,-48,-49,-50,-37,-43,-44,-45,146,147,148,149,150,151,152,-46,161,162,-79,-80,-81,163,-29,180,181,182,183,184,185,-27,-28,-31,-32,-33,-34,-35,-36,-38,-39,-40,-41,-42,]),'READ':([38,39,40,41,],[55,72,77,82,]),'ARRAY':([38,39,40,41,],[58,74,79,84,]),'NOT':([38,39,40,41,44,59,100,101,],[59,59,59,59,59,59,59,59,]),'NOT_B':([38,39,40,41,],[62,62,62,62,]),'INTEGER':([38,39,40,41,44,59,100,101,120,121,122,123,124,125,126,127,128,129,130,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'DECIMAL':([38,39,40,41,44,59,100,101,120,121,122,123,124,125,126,127,128,129,130,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'STRING':([38,39,40,41,44,59,100,101,120,121,122,123,124,125,126,127,128,129,130,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'INT':([56,],[105,]),'FLOAT':([56,],[106,]),'CHAR':([56,],[107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'body':([3,5,6,7,8,9,10,11,12,],[4,27,28,29,30,31,32,33,34,]),'goto':([3,5,6,7,8,9,10,11,12,],[5,5,5,5,5,5,5,5,5,]),'unset':([3,5,6,7,8,9,10,11,12,],[6,6,6,6,6,6,6,6,6,]),'print':([3,5,6,7,8,9,10,11,12,],[7,7,7,7,7,7,7,7,7,]),'exit':([3,5,6,7,8,9,10,11,12,],[8,8,8,8,8,8,8,8,8,]),'tag':([3,5,6,7,8,9,10,11,12,],[9,9,9,9,9,9,9,9,9,]),'if':([3,5,6,7,8,9,10,11,12,],[10,10,10,10,10,10,10,10,10,]),'assign':([3,5,6,7,8,9,10,11,12,],[11,11,11,11,11,11,11,11,11,]),'declaration':([3,5,6,7,8,9,10,11,12,],[12,12,12,12,12,12,12,12,12,]),'empty':([3,5,6,7,8,9,10,11,12,],[13,13,13,13,13,13,13,13,13,]),'var':([3,5,6,7,8,9,10,11,12,38,39,40,41,44,59,100,101,111,112,113,114,115,120,121,122,123,124,125,126,127,128,129,130,162,],[26,26,26,26,26,26,26,26,26,61,61,61,61,92,92,92,92,164,165,166,167,168,92,92,92,92,92,92,92,92,92,92,92,194,]),'condition':([38,39,40,41,44,59,100,101,],[53,70,75,80,91,110,159,160,]),'conversion':([38,39,40,41,],[54,71,76,81,]),'bitwise':([38,39,40,41,],[57,73,78,83,]),'relational':([38,39,40,41,44,59,100,101,],[60,60,60,60,60,60,60,60,]),'arithmetic':([38,39,40,41,44,59,100,101,120,121,122,123,124,125,126,127,128,129,130,],[66,66,66,66,66,66,66,66,169,170,171,172,173,174,175,176,177,178,179,]),'type':([56,],[104,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> MAIN COLON body','start',3,'p_start','analizer.py',405),
  ('body -> goto body','body',2,'p_body','analizer.py',413),
  ('body -> unset body','body',2,'p_body','analizer.py',414),
  ('body -> print body','body',2,'p_body','analizer.py',415),
  ('body -> exit body','body',2,'p_body','analizer.py',416),
  ('body -> tag body','body',2,'p_body','analizer.py',417),
  ('body -> if body','body',2,'p_body','analizer.py',418),
  ('body -> assign body','body',2,'p_body','analizer.py',419),
  ('body -> declaration body','body',2,'p_body','analizer.py',420),
  ('body -> empty','body',1,'p_body_e','analizer.py',426),
  ('goto -> GOTO NAME SEMICOLON','goto',3,'p_goto','analizer.py',432),
  ('unset -> UNSET L_PAR TVAR R_PAR SEMICOLON','unset',5,'p_unset','analizer.py',438),
  ('unset -> UNSET L_PAR AVAR R_PAR SEMICOLON','unset',5,'p_unset','analizer.py',439),
  ('unset -> UNSET L_PAR VVAR R_PAR SEMICOLON','unset',5,'p_unset','analizer.py',440),
  ('unset -> UNSET L_PAR SVAR R_PAR SEMICOLON','unset',5,'p_unset','analizer.py',441),
  ('unset -> UNSET L_PAR SPVAR R_PAR SEMICOLON','unset',5,'p_unset','analizer.py',442),
  ('unset -> UNSET L_PAR RAVAR R_PAR SEMICOLON','unset',5,'p_unset','analizer.py',443),
  ('print -> PRINT L_PAR TVAR R_PAR SEMICOLON','print',5,'p_print','analizer.py',449),
  ('print -> PRINT L_PAR AVAR R_PAR SEMICOLON','print',5,'p_print','analizer.py',450),
  ('print -> PRINT L_PAR VVAR R_PAR SEMICOLON','print',5,'p_print','analizer.py',451),
  ('print -> PRINT L_PAR SVAR R_PAR SEMICOLON','print',5,'p_print','analizer.py',452),
  ('print -> PRINT L_PAR SPVAR R_PAR SEMICOLON','print',5,'p_print','analizer.py',453),
  ('print -> PRINT L_PAR RAVAR R_PAR SEMICOLON','print',5,'p_print','analizer.py',454),
  ('exit -> EXIT SEMICOLON','exit',2,'p_exit','analizer.py',460),
  ('tag -> NAME COLON','tag',2,'p_tag','analizer.py',466),
  ('if -> IF L_PAR condition R_PAR GOTO NAME SEMICOLON','if',7,'p_if','analizer.py',472),
  ('condition -> condition AND condition','condition',3,'p_condition_1','analizer.py',478),
  ('condition -> condition OR condition','condition',3,'p_condition_1','analizer.py',479),
  ('condition -> NOT condition','condition',2,'p_condition_2','analizer.py',485),
  ('condition -> relational','condition',1,'p_condition_3','analizer.py',491),
  ('relational -> arithmetic EQUAL arithmetic','relational',3,'p_relational_1','analizer.py',497),
  ('relational -> arithmetic NOT_EQUAL arithmetic','relational',3,'p_relational_1','analizer.py',498),
  ('relational -> arithmetic GREATER arithmetic','relational',3,'p_relational_1','analizer.py',499),
  ('relational -> arithmetic LESS arithmetic','relational',3,'p_relational_1','analizer.py',500),
  ('relational -> arithmetic GREATER_EQUAL arithmetic','relational',3,'p_relational_1','analizer.py',501),
  ('relational -> arithmetic LESS_EQUAL arithmetic','relational',3,'p_relational_1','analizer.py',502),
  ('relational -> arithmetic','relational',1,'p_relational_2','analizer.py',508),
  ('arithmetic -> arithmetic PLUS arithmetic','arithmetic',3,'p_arithmetic_1','analizer.py',514),
  ('arithmetic -> arithmetic MINUS arithmetic','arithmetic',3,'p_arithmetic_1','analizer.py',515),
  ('arithmetic -> arithmetic MULTIPLY arithmetic','arithmetic',3,'p_arithmetic_1','analizer.py',516),
  ('arithmetic -> arithmetic DIVIDE arithmetic','arithmetic',3,'p_arithmetic_1','analizer.py',517),
  ('arithmetic -> arithmetic REMAINDER arithmetic','arithmetic',3,'p_arithmetic_1','analizer.py',518),
  ('arithmetic -> INTEGER','arithmetic',1,'p_arithmetic_2','analizer.py',524),
  ('arithmetic -> DECIMAL','arithmetic',1,'p_arithmetic_2','analizer.py',525),
  ('arithmetic -> STRING','arithmetic',1,'p_arithmetic_2','analizer.py',526),
  ('arithmetic -> var','arithmetic',1,'p_arithmetic_2','analizer.py',527),
  ('var -> TVAR','var',1,'p_var','analizer.py',533),
  ('var -> AVAR','var',1,'p_var','analizer.py',534),
  ('var -> VVAR','var',1,'p_var','analizer.py',535),
  ('var -> SVAR','var',1,'p_var','analizer.py',536),
  ('var -> RAVAR','var',1,'p_var','analizer.py',537),
  ('var -> SPVAR','var',1,'p_var','analizer.py',538),
  ('assign -> TVAR ASSIGN condition SEMICOLON','assign',4,'p_assign_1','analizer.py',544),
  ('assign -> AVAR ASSIGN condition SEMICOLON','assign',4,'p_assign_1','analizer.py',545),
  ('assign -> VVAR ASSIGN condition SEMICOLON','assign',4,'p_assign_1','analizer.py',546),
  ('assign -> SVAR ASSIGN condition SEMICOLON','assign',4,'p_assign_1','analizer.py',547),
  ('assign -> TVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','analizer.py',554),
  ('assign -> AVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','analizer.py',555),
  ('assign -> VVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','analizer.py',556),
  ('assign -> SVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','analizer.py',557),
  ('assign -> TVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','analizer.py',563),
  ('assign -> AVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','analizer.py',564),
  ('assign -> VVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','analizer.py',565),
  ('assign -> SVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','analizer.py',566),
  ('assign -> TVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','analizer.py',573),
  ('assign -> AVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','analizer.py',574),
  ('assign -> VVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','analizer.py',575),
  ('assign -> SVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','analizer.py',576),
  ('bitwise -> var AND_B var','bitwise',3,'p_bitwise_1','analizer.py',582),
  ('bitwise -> var OR_B var','bitwise',3,'p_bitwise_1','analizer.py',583),
  ('bitwise -> var XOR_B var','bitwise',3,'p_bitwise_1','analizer.py',584),
  ('bitwise -> var SHIFT_L var','bitwise',3,'p_bitwise_1','analizer.py',585),
  ('bitwise -> var SHIFT_R var','bitwise',3,'p_bitwise_1','analizer.py',586),
  ('bitwise -> NOT_B TVAR','bitwise',2,'p_bitwise_2','analizer.py',592),
  ('bitwise -> NOT_B AVAR','bitwise',2,'p_bitwise_2','analizer.py',593),
  ('bitwise -> NOT_B VVAR','bitwise',2,'p_bitwise_2','analizer.py',594),
  ('bitwise -> NOT_B SVAR','bitwise',2,'p_bitwise_2','analizer.py',595),
  ('conversion -> L_PAR type R_PAR var','conversion',4,'p_conversion','analizer.py',601),
  ('type -> INT','type',1,'p_type','analizer.py',607),
  ('type -> FLOAT','type',1,'p_type','analizer.py',608),
  ('type -> CHAR','type',1,'p_type','analizer.py',609),
  ('declaration -> var','declaration',1,'p_declaration_1','analizer.py',615),
  ('declaration -> TVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','analizer.py',622),
  ('declaration -> AVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','analizer.py',623),
  ('declaration -> VVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','analizer.py',624),
  ('declaration -> SVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','analizer.py',625),
  ('empty -> <empty>','empty',0,'p_empty','analizer.py',632),
]
