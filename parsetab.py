
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOR_BleftAND_BleftORleftANDleftPLUSMINUSleftMULTIPLYDIVIDEABS AND AND_B ARRAY ASSIGN AVAR CHAR COLON COMMA COMMENT DECIMAL DIVIDE EQUAL EXIT FLOAT GOTO GREATER GREATER_EQUAL IF INT INTEGER LESS LESS_EQUAL L_BRACKET L_PAR MAIN MINUS MULTIPLY NAME NEWLINE NOT NOT_B NOT_EQUAL OR OR_B PLUS PRINT QUOTE_1 QUOTE_2 RAVAR READ REMAINDER R_BRACKET R_PAR SEMICOLON SHIFT_L SHIFT_R SPVAR STRING SVAR TVAR UNSET VVAR XOR XOR_B\n    start : MAIN COLON body\n    \n    body : goto body\n        | unset body\n        | print body\n        | exit body\n        | tag body\n        | if body\n        | assign body\n        | declaration body\n    \n    body : empty\n    \n    goto : GOTO NAME SEMICOLON\n    \n    unset : UNSET L_PAR TVAR R_PAR SEMICOLON\n        | UNSET L_PAR AVAR R_PAR SEMICOLON\n        | UNSET L_PAR VVAR R_PAR SEMICOLON\n        | UNSET L_PAR SVAR R_PAR SEMICOLON\n        | UNSET L_PAR SPVAR R_PAR SEMICOLON\n        | UNSET L_PAR RAVAR R_PAR SEMICOLON\n    \n    print : PRINT L_PAR TVAR R_PAR SEMICOLON\n        | PRINT L_PAR AVAR R_PAR SEMICOLON\n        | PRINT L_PAR VVAR R_PAR SEMICOLON\n        | PRINT L_PAR SVAR R_PAR SEMICOLON\n        | PRINT L_PAR SPVAR R_PAR SEMICOLON\n        | PRINT L_PAR RAVAR R_PAR SEMICOLON\n    \n    exit : EXIT SEMICOLON\n    \n    tag : NAME COLON\n    \n    if : IF L_PAR condition R_PAR GOTO NAME SEMICOLON\n    \n    condition : condition AND condition\n        | condition OR condition\n    \n    condition : NOT condition\n    \n    condition : relational\n    \n    relational : arithmetic EQUAL arithmetic\n        | arithmetic NOT_EQUAL arithmetic\n        | arithmetic GREATER arithmetic\n        | arithmetic LESS arithmetic\n        | arithmetic GREATER_EQUAL arithmetic\n        | arithmetic LESS_EQUAL arithmetic\n    \n    relational : arithmetic\n    \n    arithmetic : arithmetic PLUS arithmetic\n        | arithmetic MINUS arithmetic\n        | arithmetic MULTIPLY arithmetic\n        | arithmetic DIVIDE arithmetic\n        | arithmetic REMAINDER arithmetic\n    \n    arithmetic : INTEGER\n        | DECIMAL\n        | STRING\n        | var\n    \n    var : TVAR\n        | AVAR\n        | VVAR\n        | SVAR\n        | RAVAR\n        | SPVAR\n    \n    assign : TVAR ASSIGN arithmetic SEMICOLON\n        | AVAR ASSIGN arithmetic SEMICOLON\n        | VVAR ASSIGN arithmetic SEMICOLON\n        | SVAR ASSIGN arithmetic SEMICOLON\n    \n    assign : TVAR ASSIGN conversion SEMICOLON\n        | AVAR ASSIGN conversion SEMICOLON\n        | VVAR ASSIGN conversion SEMICOLON\n        | SVAR ASSIGN conversion SEMICOLON\n    \n    assign : TVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n        | AVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n        | VVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n        | SVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n    \n    assign : TVAR ASSIGN bitwise SEMICOLON\n        | AVAR ASSIGN bitwise SEMICOLON\n        | VVAR ASSIGN bitwise SEMICOLON\n        | SVAR ASSIGN bitwise SEMICOLON\n    \n    bitwise : var AND_B var\n        | var OR_B var\n        | var XOR_B var\n        | var SHIFT_L var\n        | var SHIFT_R var\n    \n    bitwise : NOT_B TVAR\n        | NOT_B AVAR\n        | NOT_B VVAR\n        | NOT_B SVAR\n    \n    conversion : L_PAR type R_PAR var\n    \n    type : INT\n        | FLOAT\n        | CHAR\n    \n    declaration : var\n    \n    declaration : TVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n        | AVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n        | VVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n        | SVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n    \n    empty :\n    '
    
_lr_action_items = {'MAIN':([0,],[2,]),'$end':([1,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,21,22,26,27,28,29,30,31,32,33,34,36,43,45,99,105,111,122,123,125,127,128,130,132,133,135,153,154,155,156,157,158,178,179,180,181,182,183,193,195,196,197,198,199,200,201,203,],[0,-87,-1,-87,-87,-87,-87,-87,-87,-87,-87,-10,-47,-48,-49,-50,-52,-51,-82,-2,-3,-4,-5,-6,-7,-8,-9,-25,-24,-11,-53,-57,-65,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'COLON':([2,15,],[3,36,]),'GOTO':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,43,45,99,105,111,122,123,125,127,128,130,132,133,135,143,153,154,155,156,157,158,178,179,180,181,182,183,193,195,196,197,198,199,200,201,203,],[14,14,14,14,14,14,14,14,14,-47,-48,-49,-50,-52,-51,-82,-25,-24,-11,-53,-57,-65,-54,-58,-66,-55,-59,-67,-56,-60,-68,184,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'UNSET':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,43,45,99,105,111,122,123,125,127,128,130,132,133,135,153,154,155,156,157,158,178,179,180,181,182,183,193,195,196,197,198,199,200,201,203,],[16,16,16,16,16,16,16,16,16,-47,-48,-49,-50,-52,-51,-82,-25,-24,-11,-53,-57,-65,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'PRINT':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,43,45,99,105,111,122,123,125,127,128,130,132,133,135,153,154,155,156,157,158,178,179,180,181,182,183,193,195,196,197,198,199,200,201,203,],[23,23,23,23,23,23,23,23,23,-47,-48,-49,-50,-52,-51,-82,-25,-24,-11,-53,-57,-65,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'EXIT':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,43,45,99,105,111,122,123,125,127,128,130,132,133,135,153,154,155,156,157,158,178,179,180,181,182,183,193,195,196,197,198,199,200,201,203,],[24,24,24,24,24,24,24,24,24,-47,-48,-49,-50,-52,-51,-82,-25,-24,-11,-53,-57,-65,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'NAME':([3,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,26,36,43,45,99,105,111,122,123,125,127,128,130,132,133,135,153,154,155,156,157,158,178,179,180,181,182,183,184,193,195,196,197,198,199,200,201,203,],[15,15,15,15,15,15,15,15,15,35,-47,-48,-49,-50,-52,-51,-82,-25,-24,-11,-53,-57,-65,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,202,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'IF':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,43,45,99,105,111,122,123,125,127,128,130,132,133,135,153,154,155,156,157,158,178,179,180,181,182,183,193,195,196,197,198,199,200,201,203,],[25,25,25,25,25,25,25,25,25,-47,-48,-49,-50,-52,-51,-82,-25,-24,-11,-53,-57,-65,-54,-58,-66,-55,-59,-67,-56,-60,-68,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'TVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,63,89,99,100,101,102,103,104,105,111,113,114,115,116,117,122,123,125,127,128,130,132,133,135,144,145,147,148,149,150,151,152,153,154,155,156,157,158,165,178,179,180,181,182,183,193,195,196,197,198,199,200,201,203,],[17,17,17,17,17,17,17,17,17,-47,-48,-49,-50,-52,-51,-82,-25,46,52,52,52,52,82,-24,52,-11,118,52,-53,52,52,52,52,52,-57,-65,52,52,52,52,52,-54,-58,-66,-55,-59,-67,-56,-60,-68,52,52,52,52,52,52,52,52,-12,-13,-14,-15,-16,-17,52,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'AVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,63,89,99,100,101,102,103,104,105,111,113,114,115,116,117,122,123,125,127,128,130,132,133,135,144,145,147,148,149,150,151,152,153,154,155,156,157,158,165,178,179,180,181,182,183,193,195,196,197,198,199,200,201,203,],[18,18,18,18,18,18,18,18,18,-47,-48,-49,-50,-52,-51,-82,-25,47,64,64,64,64,83,-24,64,-11,119,64,-53,64,64,64,64,64,-57,-65,64,64,64,64,64,-54,-58,-66,-55,-59,-67,-56,-60,-68,64,64,64,64,64,64,64,64,-12,-13,-14,-15,-16,-17,64,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'VVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,63,89,99,100,101,102,103,104,105,111,113,114,115,116,117,122,123,125,127,128,130,132,133,135,144,145,147,148,149,150,151,152,153,154,155,156,157,158,165,178,179,180,181,182,183,193,195,196,197,198,199,200,201,203,],[19,19,19,19,19,19,19,19,19,-47,-48,-49,-50,-52,-51,-82,-25,48,65,65,65,65,84,-24,65,-11,120,65,-53,65,65,65,65,65,-57,-65,65,65,65,65,65,-54,-58,-66,-55,-59,-67,-56,-60,-68,65,65,65,65,65,65,65,65,-12,-13,-14,-15,-16,-17,65,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'SVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,63,89,99,100,101,102,103,104,105,111,113,114,115,116,117,122,123,125,127,128,130,132,133,135,144,145,147,148,149,150,151,152,153,154,155,156,157,158,165,178,179,180,181,182,183,193,195,196,197,198,199,200,201,203,],[20,20,20,20,20,20,20,20,20,-47,-48,-49,-50,-52,-51,-82,-25,49,66,66,66,66,85,-24,66,-11,121,66,-53,66,66,66,66,66,-57,-65,66,66,66,66,66,-54,-58,-66,-55,-59,-67,-56,-60,-68,66,66,66,66,66,66,66,66,-12,-13,-14,-15,-16,-17,66,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'RAVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,89,99,100,101,102,103,104,105,111,113,114,115,116,117,122,123,125,127,128,130,132,133,135,144,145,147,148,149,150,151,152,153,154,155,156,157,158,165,178,179,180,181,182,183,193,195,196,197,198,199,200,201,203,],[22,22,22,22,22,22,22,22,22,-47,-48,-49,-50,-52,-51,-82,-25,51,22,22,22,22,87,-24,22,-11,22,-53,22,22,22,22,22,-57,-65,22,22,22,22,22,-54,-58,-66,-55,-59,-67,-56,-60,-68,22,22,22,22,22,22,22,22,-12,-13,-14,-15,-16,-17,22,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'SPVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,89,99,100,101,102,103,104,105,111,113,114,115,116,117,122,123,125,127,128,130,132,133,135,144,145,147,148,149,150,151,152,153,154,155,156,157,158,165,178,179,180,181,182,183,193,195,196,197,198,199,200,201,203,],[21,21,21,21,21,21,21,21,21,-47,-48,-49,-50,-52,-51,-82,-25,50,21,21,21,21,86,-24,21,-11,21,-53,21,21,21,21,21,-57,-65,21,21,21,21,21,-54,-58,-66,-55,-59,-67,-56,-60,-68,21,21,21,21,21,21,21,21,-12,-13,-14,-15,-16,-17,21,-18,-19,-20,-21,-22,-23,-61,-83,-62,-84,-63,-85,-64,-86,-26,]),'L_PAR':([16,23,25,38,39,40,41,55,58,69,71,74,76,79,81,],[37,42,44,56,56,56,56,106,112,124,126,129,131,134,136,]),'ASSIGN':([17,18,19,20,],[38,39,40,41,]),'AND_B':([21,22,52,62,64,65,66,],[-52,-51,-47,113,-48,-49,-50,]),'OR_B':([21,22,52,62,64,65,66,],[-52,-51,-47,114,-48,-49,-50,]),'XOR_B':([21,22,52,62,64,65,66,],[-52,-51,-47,115,-48,-49,-50,]),'SHIFT_L':([21,22,52,62,64,65,66,],[-52,-51,-47,116,-48,-49,-50,]),'SHIFT_R':([21,22,52,62,64,65,66,],[-52,-51,-47,117,-48,-49,-50,]),'SEMICOLON':([21,22,24,35,52,53,54,57,59,60,61,62,64,65,66,67,68,70,72,73,75,77,78,80,92,93,94,95,96,97,98,118,119,120,121,137,138,139,140,141,142,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,194,202,],[-52,-51,43,45,-47,99,105,111,-43,-44,-45,-46,-48,-49,-50,122,123,125,127,128,130,132,133,135,-46,153,154,155,156,157,158,-74,-75,-76,-77,178,179,180,181,182,183,-38,-39,-40,-41,-42,193,195,-69,-70,-71,-72,-73,196,197,198,199,200,201,-78,203,]),'PLUS':([21,22,52,53,59,60,61,62,64,65,66,67,72,77,91,92,159,160,161,162,163,187,188,189,190,191,192,],[-52,-51,-47,100,-43,-44,-45,-46,-48,-49,-50,100,100,100,100,-46,-38,-39,-40,-41,100,100,100,100,100,100,100,]),'MINUS':([21,22,52,53,59,60,61,62,64,65,66,67,72,77,91,92,159,160,161,162,163,187,188,189,190,191,192,],[-52,-51,-47,101,-43,-44,-45,-46,-48,-49,-50,101,101,101,101,-46,-38,-39,-40,-41,101,101,101,101,101,101,101,]),'MULTIPLY':([21,22,52,53,59,60,61,62,64,65,66,67,72,77,91,92,159,160,161,162,163,187,188,189,190,191,192,],[-52,-51,-47,102,-43,-44,-45,-46,-48,-49,-50,102,102,102,102,-46,102,102,-40,-41,102,102,102,102,102,102,102,]),'DIVIDE':([21,22,52,53,59,60,61,62,64,65,66,67,72,77,91,92,159,160,161,162,163,187,188,189,190,191,192,],[-52,-51,-47,103,-43,-44,-45,-46,-48,-49,-50,103,103,103,103,-46,103,103,-40,-41,103,103,103,103,103,103,103,]),'REMAINDER':([21,22,52,53,59,60,61,62,64,65,66,67,72,77,91,92,159,160,161,162,163,187,188,189,190,191,192,],[-52,-51,-47,104,-43,-44,-45,-46,-48,-49,-50,104,104,104,104,-46,-38,-39,-40,-41,104,104,104,104,104,104,104,]),'EQUAL':([21,22,52,59,60,61,64,65,66,91,92,159,160,161,162,163,],[-52,-51,-47,-43,-44,-45,-48,-49,-50,147,-46,-38,-39,-40,-41,-42,]),'NOT_EQUAL':([21,22,52,59,60,61,64,65,66,91,92,159,160,161,162,163,],[-52,-51,-47,-43,-44,-45,-48,-49,-50,148,-46,-38,-39,-40,-41,-42,]),'GREATER':([21,22,52,59,60,61,64,65,66,91,92,159,160,161,162,163,],[-52,-51,-47,-43,-44,-45,-48,-49,-50,149,-46,-38,-39,-40,-41,-42,]),'LESS':([21,22,52,59,60,61,64,65,66,91,92,159,160,161,162,163,],[-52,-51,-47,-43,-44,-45,-48,-49,-50,150,-46,-38,-39,-40,-41,-42,]),'GREATER_EQUAL':([21,22,52,59,60,61,64,65,66,91,92,159,160,161,162,163,],[-52,-51,-47,-43,-44,-45,-48,-49,-50,151,-46,-38,-39,-40,-41,-42,]),'LESS_EQUAL':([21,22,52,59,60,61,64,65,66,91,92,159,160,161,162,163,],[-52,-51,-47,-43,-44,-45,-48,-49,-50,152,-46,-38,-39,-40,-41,-42,]),'R_PAR':([21,22,46,47,48,49,50,51,52,59,60,61,64,65,66,82,83,84,85,86,87,88,90,91,92,106,107,108,109,110,112,124,126,129,131,134,136,146,159,160,161,162,163,185,186,187,188,189,190,191,192,],[-52,-51,93,94,95,96,97,98,-47,-43,-44,-45,-48,-49,-50,137,138,139,140,141,142,143,-30,-37,-46,164,165,-79,-80,-81,166,172,173,174,175,176,177,-29,-38,-39,-40,-41,-42,-27,-28,-31,-32,-33,-34,-35,-36,]),'AND':([21,22,52,59,60,61,64,65,66,88,90,91,92,146,159,160,161,162,163,185,186,187,188,189,190,191,192,],[-52,-51,-47,-43,-44,-45,-48,-49,-50,144,-30,-37,-46,144,-38,-39,-40,-41,-42,-27,144,-31,-32,-33,-34,-35,-36,]),'OR':([21,22,52,59,60,61,64,65,66,88,90,91,92,146,159,160,161,162,163,185,186,187,188,189,190,191,192,],[-52,-51,-47,-43,-44,-45,-48,-49,-50,145,-30,-37,-46,145,-38,-39,-40,-41,-42,-27,-28,-31,-32,-33,-34,-35,-36,]),'READ':([38,39,40,41,],[55,69,74,79,]),'ARRAY':([38,39,40,41,],[58,71,76,81,]),'INTEGER':([38,39,40,41,44,89,100,101,102,103,104,144,145,147,148,149,150,151,152,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'DECIMAL':([38,39,40,41,44,89,100,101,102,103,104,144,145,147,148,149,150,151,152,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'STRING':([38,39,40,41,44,89,100,101,102,103,104,144,145,147,148,149,150,151,152,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'NOT_B':([38,39,40,41,],[63,63,63,63,]),'NOT':([44,89,144,145,],[89,89,89,89,]),'INT':([56,],[108,]),'FLOAT':([56,],[109,]),'CHAR':([56,],[110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'body':([3,5,6,7,8,9,10,11,12,],[4,27,28,29,30,31,32,33,34,]),'goto':([3,5,6,7,8,9,10,11,12,],[5,5,5,5,5,5,5,5,5,]),'unset':([3,5,6,7,8,9,10,11,12,],[6,6,6,6,6,6,6,6,6,]),'print':([3,5,6,7,8,9,10,11,12,],[7,7,7,7,7,7,7,7,7,]),'exit':([3,5,6,7,8,9,10,11,12,],[8,8,8,8,8,8,8,8,8,]),'tag':([3,5,6,7,8,9,10,11,12,],[9,9,9,9,9,9,9,9,9,]),'if':([3,5,6,7,8,9,10,11,12,],[10,10,10,10,10,10,10,10,10,]),'assign':([3,5,6,7,8,9,10,11,12,],[11,11,11,11,11,11,11,11,11,]),'declaration':([3,5,6,7,8,9,10,11,12,],[12,12,12,12,12,12,12,12,12,]),'empty':([3,5,6,7,8,9,10,11,12,],[13,13,13,13,13,13,13,13,13,]),'var':([3,5,6,7,8,9,10,11,12,38,39,40,41,44,89,100,101,102,103,104,113,114,115,116,117,144,145,147,148,149,150,151,152,165,],[26,26,26,26,26,26,26,26,26,62,62,62,62,92,92,92,92,92,92,92,167,168,169,170,171,92,92,92,92,92,92,92,92,194,]),'arithmetic':([38,39,40,41,44,89,100,101,102,103,104,144,145,147,148,149,150,151,152,],[53,67,72,77,91,91,159,160,161,162,163,91,91,187,188,189,190,191,192,]),'conversion':([38,39,40,41,],[54,68,73,78,]),'bitwise':([38,39,40,41,],[57,70,75,80,]),'condition':([44,89,144,145,],[88,146,185,186,]),'relational':([44,89,144,145,],[90,90,90,90,]),'type':([56,],[107,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> MAIN COLON body','start',3,'p_start','analizer.py',318),
  ('body -> goto body','body',2,'p_body','analizer.py',330),
  ('body -> unset body','body',2,'p_body','analizer.py',331),
  ('body -> print body','body',2,'p_body','analizer.py',332),
  ('body -> exit body','body',2,'p_body','analizer.py',333),
  ('body -> tag body','body',2,'p_body','analizer.py',334),
  ('body -> if body','body',2,'p_body','analizer.py',335),
  ('body -> assign body','body',2,'p_body','analizer.py',336),
  ('body -> declaration body','body',2,'p_body','analizer.py',337),
  ('body -> empty','body',1,'p_body_e','analizer.py',343),
  ('goto -> GOTO NAME SEMICOLON','goto',3,'p_goto','analizer.py',349),
  ('unset -> UNSET L_PAR TVAR R_PAR SEMICOLON','unset',5,'p_unset','analizer.py',355),
  ('unset -> UNSET L_PAR AVAR R_PAR SEMICOLON','unset',5,'p_unset','analizer.py',356),
  ('unset -> UNSET L_PAR VVAR R_PAR SEMICOLON','unset',5,'p_unset','analizer.py',357),
  ('unset -> UNSET L_PAR SVAR R_PAR SEMICOLON','unset',5,'p_unset','analizer.py',358),
  ('unset -> UNSET L_PAR SPVAR R_PAR SEMICOLON','unset',5,'p_unset','analizer.py',359),
  ('unset -> UNSET L_PAR RAVAR R_PAR SEMICOLON','unset',5,'p_unset','analizer.py',360),
  ('print -> PRINT L_PAR TVAR R_PAR SEMICOLON','print',5,'p_print','analizer.py',366),
  ('print -> PRINT L_PAR AVAR R_PAR SEMICOLON','print',5,'p_print','analizer.py',367),
  ('print -> PRINT L_PAR VVAR R_PAR SEMICOLON','print',5,'p_print','analizer.py',368),
  ('print -> PRINT L_PAR SVAR R_PAR SEMICOLON','print',5,'p_print','analizer.py',369),
  ('print -> PRINT L_PAR SPVAR R_PAR SEMICOLON','print',5,'p_print','analizer.py',370),
  ('print -> PRINT L_PAR RAVAR R_PAR SEMICOLON','print',5,'p_print','analizer.py',371),
  ('exit -> EXIT SEMICOLON','exit',2,'p_exit','analizer.py',377),
  ('tag -> NAME COLON','tag',2,'p_tag','analizer.py',383),
  ('if -> IF L_PAR condition R_PAR GOTO NAME SEMICOLON','if',7,'p_if','analizer.py',389),
  ('condition -> condition AND condition','condition',3,'p_condition_1','analizer.py',395),
  ('condition -> condition OR condition','condition',3,'p_condition_1','analizer.py',396),
  ('condition -> NOT condition','condition',2,'p_condition_2','analizer.py',402),
  ('condition -> relational','condition',1,'p_condition_3','analizer.py',408),
  ('relational -> arithmetic EQUAL arithmetic','relational',3,'p_relational_1','analizer.py',414),
  ('relational -> arithmetic NOT_EQUAL arithmetic','relational',3,'p_relational_1','analizer.py',415),
  ('relational -> arithmetic GREATER arithmetic','relational',3,'p_relational_1','analizer.py',416),
  ('relational -> arithmetic LESS arithmetic','relational',3,'p_relational_1','analizer.py',417),
  ('relational -> arithmetic GREATER_EQUAL arithmetic','relational',3,'p_relational_1','analizer.py',418),
  ('relational -> arithmetic LESS_EQUAL arithmetic','relational',3,'p_relational_1','analizer.py',419),
  ('relational -> arithmetic','relational',1,'p_relational_2','analizer.py',425),
  ('arithmetic -> arithmetic PLUS arithmetic','arithmetic',3,'p_arithmetic_1','analizer.py',431),
  ('arithmetic -> arithmetic MINUS arithmetic','arithmetic',3,'p_arithmetic_1','analizer.py',432),
  ('arithmetic -> arithmetic MULTIPLY arithmetic','arithmetic',3,'p_arithmetic_1','analizer.py',433),
  ('arithmetic -> arithmetic DIVIDE arithmetic','arithmetic',3,'p_arithmetic_1','analizer.py',434),
  ('arithmetic -> arithmetic REMAINDER arithmetic','arithmetic',3,'p_arithmetic_1','analizer.py',435),
  ('arithmetic -> INTEGER','arithmetic',1,'p_arithmetic_2','analizer.py',441),
  ('arithmetic -> DECIMAL','arithmetic',1,'p_arithmetic_2','analizer.py',442),
  ('arithmetic -> STRING','arithmetic',1,'p_arithmetic_2','analizer.py',443),
  ('arithmetic -> var','arithmetic',1,'p_arithmetic_2','analizer.py',444),
  ('var -> TVAR','var',1,'p_var','analizer.py',450),
  ('var -> AVAR','var',1,'p_var','analizer.py',451),
  ('var -> VVAR','var',1,'p_var','analizer.py',452),
  ('var -> SVAR','var',1,'p_var','analizer.py',453),
  ('var -> RAVAR','var',1,'p_var','analizer.py',454),
  ('var -> SPVAR','var',1,'p_var','analizer.py',455),
  ('assign -> TVAR ASSIGN arithmetic SEMICOLON','assign',4,'p_assign_1','analizer.py',461),
  ('assign -> AVAR ASSIGN arithmetic SEMICOLON','assign',4,'p_assign_1','analizer.py',462),
  ('assign -> VVAR ASSIGN arithmetic SEMICOLON','assign',4,'p_assign_1','analizer.py',463),
  ('assign -> SVAR ASSIGN arithmetic SEMICOLON','assign',4,'p_assign_1','analizer.py',464),
  ('assign -> TVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','analizer.py',471),
  ('assign -> AVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','analizer.py',472),
  ('assign -> VVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','analizer.py',473),
  ('assign -> SVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','analizer.py',474),
  ('assign -> TVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','analizer.py',480),
  ('assign -> AVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','analizer.py',481),
  ('assign -> VVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','analizer.py',482),
  ('assign -> SVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','analizer.py',483),
  ('assign -> TVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','analizer.py',490),
  ('assign -> AVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','analizer.py',491),
  ('assign -> VVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','analizer.py',492),
  ('assign -> SVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','analizer.py',493),
  ('bitwise -> var AND_B var','bitwise',3,'p_bitwise_1','analizer.py',499),
  ('bitwise -> var OR_B var','bitwise',3,'p_bitwise_1','analizer.py',500),
  ('bitwise -> var XOR_B var','bitwise',3,'p_bitwise_1','analizer.py',501),
  ('bitwise -> var SHIFT_L var','bitwise',3,'p_bitwise_1','analizer.py',502),
  ('bitwise -> var SHIFT_R var','bitwise',3,'p_bitwise_1','analizer.py',503),
  ('bitwise -> NOT_B TVAR','bitwise',2,'p_bitwise_2','analizer.py',509),
  ('bitwise -> NOT_B AVAR','bitwise',2,'p_bitwise_2','analizer.py',510),
  ('bitwise -> NOT_B VVAR','bitwise',2,'p_bitwise_2','analizer.py',511),
  ('bitwise -> NOT_B SVAR','bitwise',2,'p_bitwise_2','analizer.py',512),
  ('conversion -> L_PAR type R_PAR var','conversion',4,'p_conversion','analizer.py',518),
  ('type -> INT','type',1,'p_type','analizer.py',524),
  ('type -> FLOAT','type',1,'p_type','analizer.py',525),
  ('type -> CHAR','type',1,'p_type','analizer.py',526),
  ('declaration -> var','declaration',1,'p_declaration_1','analizer.py',532),
  ('declaration -> TVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','analizer.py',539),
  ('declaration -> AVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','analizer.py',540),
  ('declaration -> VVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','analizer.py',541),
  ('declaration -> SVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','analizer.py',542),
  ('empty -> <empty>','empty',0,'p_empty','analizer.py',549),
]
