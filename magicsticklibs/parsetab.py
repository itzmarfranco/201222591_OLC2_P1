
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOR_BleftAND_BleftORleftANDleftPLUSMINUSleftMULTIPLYDIVIDEABS AND AND_B ARRAY ASSIGN AVAR CHAR COLON COMMA COMMENT DECIMAL DIVIDE EQUAL EXIT FLOAT GOTO GREATER GREATER_EQUAL IF INT INTEGER LESS LESS_EQUAL L_BRACKET L_PAR MAIN MINUS MULTIPLY NAME NOT NOT_B NOT_EQUAL OR OR_B PLUS PRINT QUOTE_1 QUOTE_2 RAVAR READ REMAINDER R_BRACKET R_PAR SEMICOLON SHIFT_L SHIFT_R SPVAR STRING SVAR TVAR UNSET VVAR XOR XOR_B\n        start : MAIN COLON body\n        \n        body : goto body\n            | unset body\n            | print body\n            | exit body\n            | tag body\n            | if body\n            | assign body\n            | declaration body\n        \n        body : empty\n        \n        goto : GOTO NAME SEMICOLON\n        \n        unset : UNSET L_PAR TVAR R_PAR SEMICOLON\n            | UNSET L_PAR AVAR R_PAR SEMICOLON\n            | UNSET L_PAR VVAR R_PAR SEMICOLON\n            | UNSET L_PAR SVAR R_PAR SEMICOLON\n            | UNSET L_PAR SPVAR R_PAR SEMICOLON\n            | UNSET L_PAR RAVAR R_PAR SEMICOLON\n        \n        print : PRINT L_PAR TVAR R_PAR SEMICOLON\n            | PRINT L_PAR AVAR R_PAR SEMICOLON\n            | PRINT L_PAR VVAR R_PAR SEMICOLON\n            | PRINT L_PAR SVAR R_PAR SEMICOLON\n            | PRINT L_PAR SPVAR R_PAR SEMICOLON\n            | PRINT L_PAR RAVAR R_PAR SEMICOLON\n        \n        print : PRINT L_PAR TVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON\n            | PRINT L_PAR AVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON\n            | PRINT L_PAR VVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON\n            | PRINT L_PAR SVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON\n            | PRINT L_PAR SPVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON\n            | PRINT L_PAR RAVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON\n        \n        exit : EXIT SEMICOLON\n        \n        tag : NAME COLON\n        \n        if : IF L_PAR condition R_PAR GOTO NAME SEMICOLON\n        \n        condition : condition AND condition\n            | condition OR condition\n        \n        condition : NOT condition\n        \n        condition : relational\n        \n        relational : arithmetic EQUAL arithmetic\n            | arithmetic NOT_EQUAL arithmetic\n            | arithmetic GREATER arithmetic\n            | arithmetic LESS arithmetic\n            | arithmetic GREATER_EQUAL arithmetic\n            | arithmetic LESS_EQUAL arithmetic\n        \n        relational : arithmetic\n        \n        arithmetic : arithmetic PLUS arithmetic\n            | arithmetic MINUS arithmetic\n            | arithmetic MULTIPLY arithmetic\n            | arithmetic DIVIDE arithmetic\n            | arithmetic REMAINDER arithmetic\n        \n        arithmetic : INTEGER\n            | DECIMAL\n            | STRING\n            | var\n            | array_access\n        \n        var : TVAR\n            | AVAR\n            | VVAR\n            | SVAR\n            | RAVAR\n            | SPVAR\n        \n        array_access : \n        \n        assign : TVAR ASSIGN condition SEMICOLON\n            | AVAR ASSIGN condition SEMICOLON\n            | VVAR ASSIGN condition SEMICOLON\n            | SVAR ASSIGN condition SEMICOLON\n        \n        assign : TVAR ASSIGN conversion SEMICOLON\n            | AVAR ASSIGN conversion SEMICOLON\n            | VVAR ASSIGN conversion SEMICOLON\n            | SVAR ASSIGN conversion SEMICOLON\n        \n        assign : TVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n            | AVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n            | VVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n            | SVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n        \n        assign : TVAR ASSIGN bitwise SEMICOLON\n            | AVAR ASSIGN bitwise SEMICOLON\n            | VVAR ASSIGN bitwise SEMICOLON\n            | SVAR ASSIGN bitwise SEMICOLON\n        \n        assign : TVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON\n            | AVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON\n            | VVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON\n            | SVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON\n            | SPVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON\n            | RAVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON\n        \n        assign : TVAR ASSIGN ABS L_PAR var R_PAR SEMICOLON\n            | AVAR ASSIGN ABS L_PAR  var R_PAR SEMICOLON\n            | VVAR ASSIGN ABS L_PAR var R_PAR SEMICOLON\n            | SVAR ASSIGN ABS L_PAR var R_PAR SEMICOLON\n        \n        bitwise : var AND_B var\n            | var OR_B var\n            | var XOR_B var\n            | var SHIFT_L var\n            | var SHIFT_R var\n        \n        bitwise : NOT_B TVAR\n            | NOT_B AVAR\n            | NOT_B VVAR\n            | NOT_B SVAR\n        \n        conversion : L_PAR type R_PAR var\n        \n        type : INT\n            | FLOAT\n            | CHAR\n        \n        declaration : var\n        \n        declaration : TVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n            | AVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n            | VVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n            | SVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n            | SPVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n            | RAVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n        \n        declaration : TVAR L_BRACKET arithmetic R_BRACKET SEMICOLON\n            | AVAR L_BRACKET arithmetic R_BRACKET SEMICOLON\n            | VVAR L_BRACKET arithmetic R_BRACKET SEMICOLON\n            | SVAR L_BRACKET arithmetic R_BRACKET SEMICOLON\n            | SPVAR L_BRACKET arithmetic R_BRACKET SEMICOLON\n            | RAVAR L_BRACKET arithmetic R_BRACKET SEMICOLON\n        \n        empty :\n        '
    
_lr_action_items = {'MAIN':([0,],[2,]),'$end':([1,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,21,22,26,27,28,29,30,31,32,33,34,36,51,53,122,125,131,156,157,159,163,164,166,170,171,173,194,195,196,197,198,199,223,228,233,238,240,243,245,247,249,251,253,255,258,261,263,265,267,269,271,273,276,278,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,],[0,-113,-1,-113,-113,-113,-113,-113,-113,-113,-113,-10,-54,-55,-56,-57,-59,-58,-100,-2,-3,-4,-5,-6,-7,-8,-9,-31,-30,-11,-61,-65,-73,-62,-66,-74,-63,-67,-75,-64,-68,-76,-12,-13,-14,-15,-16,-17,-107,-108,-109,-110,-111,-112,-18,-19,-20,-21,-22,-23,-69,-101,-70,-102,-71,-103,-72,-104,-105,-106,-83,-77,-84,-78,-85,-79,-86,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'COLON':([2,15,],[3,36,]),'GOTO':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,51,53,122,125,131,156,157,159,163,164,166,170,171,173,193,194,195,196,197,198,199,223,228,233,238,240,243,245,247,249,251,253,255,258,261,263,265,267,269,271,273,276,278,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,],[14,14,14,14,14,14,14,14,14,-54,-55,-56,-57,-59,-58,-100,-31,-30,-11,-61,-65,-73,-62,-66,-74,-63,-67,-75,-64,-68,-76,257,-12,-13,-14,-15,-16,-17,-107,-108,-109,-110,-111,-112,-18,-19,-20,-21,-22,-23,-69,-101,-70,-102,-71,-103,-72,-104,-105,-106,-83,-77,-84,-78,-85,-79,-86,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'UNSET':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,51,53,122,125,131,156,157,159,163,164,166,170,171,173,194,195,196,197,198,199,223,228,233,238,240,243,245,247,249,251,253,255,258,261,263,265,267,269,271,273,276,278,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,],[16,16,16,16,16,16,16,16,16,-54,-55,-56,-57,-59,-58,-100,-31,-30,-11,-61,-65,-73,-62,-66,-74,-63,-67,-75,-64,-68,-76,-12,-13,-14,-15,-16,-17,-107,-108,-109,-110,-111,-112,-18,-19,-20,-21,-22,-23,-69,-101,-70,-102,-71,-103,-72,-104,-105,-106,-83,-77,-84,-78,-85,-79,-86,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'PRINT':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,51,53,122,125,131,156,157,159,163,164,166,170,171,173,194,195,196,197,198,199,223,228,233,238,240,243,245,247,249,251,253,255,258,261,263,265,267,269,271,273,276,278,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,],[23,23,23,23,23,23,23,23,23,-54,-55,-56,-57,-59,-58,-100,-31,-30,-11,-61,-65,-73,-62,-66,-74,-63,-67,-75,-64,-68,-76,-12,-13,-14,-15,-16,-17,-107,-108,-109,-110,-111,-112,-18,-19,-20,-21,-22,-23,-69,-101,-70,-102,-71,-103,-72,-104,-105,-106,-83,-77,-84,-78,-85,-79,-86,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'EXIT':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,51,53,122,125,131,156,157,159,163,164,166,170,171,173,194,195,196,197,198,199,223,228,233,238,240,243,245,247,249,251,253,255,258,261,263,265,267,269,271,273,276,278,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,],[24,24,24,24,24,24,24,24,24,-54,-55,-56,-57,-59,-58,-100,-31,-30,-11,-61,-65,-73,-62,-66,-74,-63,-67,-75,-64,-68,-76,-12,-13,-14,-15,-16,-17,-107,-108,-109,-110,-111,-112,-18,-19,-20,-21,-22,-23,-69,-101,-70,-102,-71,-103,-72,-104,-105,-106,-83,-77,-84,-78,-85,-79,-86,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'NAME':([3,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,26,36,51,53,122,125,131,156,157,159,163,164,166,170,171,173,194,195,196,197,198,199,223,228,233,238,240,243,245,247,249,251,253,255,257,258,261,263,265,267,269,271,273,276,278,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,],[15,15,15,15,15,15,15,15,15,35,-54,-55,-56,-57,-59,-58,-100,-31,-30,-11,-61,-65,-73,-62,-66,-74,-63,-67,-75,-64,-68,-76,-12,-13,-14,-15,-16,-17,-107,-108,-109,-110,-111,-112,-18,-19,-20,-21,-22,-23,285,-69,-101,-70,-102,-71,-103,-72,-104,-105,-106,-83,-77,-84,-78,-85,-79,-86,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'IF':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,51,53,122,125,131,156,157,159,163,164,166,170,171,173,194,195,196,197,198,199,223,228,233,238,240,243,245,247,249,251,253,255,258,261,263,265,267,269,271,273,276,278,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,],[25,25,25,25,25,25,25,25,25,-54,-55,-56,-57,-59,-58,-100,-31,-30,-11,-61,-65,-73,-62,-66,-74,-63,-67,-75,-64,-68,-76,-12,-13,-14,-15,-16,-17,-107,-108,-109,-110,-111,-112,-18,-19,-20,-21,-22,-23,-69,-101,-70,-102,-71,-103,-72,-104,-105,-106,-83,-77,-84,-78,-85,-79,-86,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'TVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,53,69,71,122,123,124,125,131,132,133,134,135,136,137,144,145,146,147,148,149,150,151,152,153,154,156,157,159,160,163,164,166,167,170,171,173,174,182,184,186,188,190,192,194,195,196,197,198,199,203,222,223,227,228,232,233,237,238,239,240,242,243,245,247,249,251,253,255,258,261,263,265,267,269,271,273,276,278,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,],[17,17,17,17,17,17,17,17,17,-54,-55,-56,-57,-59,-58,-100,-31,54,60,60,60,60,60,60,60,60,60,60,109,-30,60,-11,60,140,-61,60,60,-65,-73,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-62,-66,-74,60,-63,-67,-75,60,-64,-68,-76,60,60,60,60,60,60,60,-12,-13,-14,-15,-16,-17,60,60,-107,60,-108,60,-109,60,-110,60,-111,60,-112,-18,-19,-20,-21,-22,-23,-69,-101,-70,-102,-71,-103,-72,-104,-105,-106,-83,-77,-84,-78,-85,-79,-86,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'AVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,53,69,71,122,123,124,125,131,132,133,134,135,136,137,144,145,146,147,148,149,150,151,152,153,154,156,157,159,160,163,164,166,167,170,171,173,174,182,184,186,188,190,192,194,195,196,197,198,199,203,222,223,227,228,232,233,237,238,239,240,242,243,245,247,249,251,253,255,258,261,263,265,267,269,271,273,276,278,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,],[18,18,18,18,18,18,18,18,18,-54,-55,-56,-57,-59,-58,-100,-31,55,72,72,72,72,72,72,72,72,72,72,110,-30,72,-11,72,141,-61,72,72,-65,-73,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-62,-66,-74,72,-63,-67,-75,72,-64,-68,-76,72,72,72,72,72,72,72,-12,-13,-14,-15,-16,-17,72,72,-107,72,-108,72,-109,72,-110,72,-111,72,-112,-18,-19,-20,-21,-22,-23,-69,-101,-70,-102,-71,-103,-72,-104,-105,-106,-83,-77,-84,-78,-85,-79,-86,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'VVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,53,69,71,122,123,124,125,131,132,133,134,135,136,137,144,145,146,147,148,149,150,151,152,153,154,156,157,159,160,163,164,166,167,170,171,173,174,182,184,186,188,190,192,194,195,196,197,198,199,203,222,223,227,228,232,233,237,238,239,240,242,243,245,247,249,251,253,255,258,261,263,265,267,269,271,273,276,278,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,],[19,19,19,19,19,19,19,19,19,-54,-55,-56,-57,-59,-58,-100,-31,56,73,73,73,73,73,73,73,73,73,73,111,-30,73,-11,73,142,-61,73,73,-65,-73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-62,-66,-74,73,-63,-67,-75,73,-64,-68,-76,73,73,73,73,73,73,73,-12,-13,-14,-15,-16,-17,73,73,-107,73,-108,73,-109,73,-110,73,-111,73,-112,-18,-19,-20,-21,-22,-23,-69,-101,-70,-102,-71,-103,-72,-104,-105,-106,-83,-77,-84,-78,-85,-79,-86,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'SVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,53,69,71,122,123,124,125,131,132,133,134,135,136,137,144,145,146,147,148,149,150,151,152,153,154,156,157,159,160,163,164,166,167,170,171,173,174,182,184,186,188,190,192,194,195,196,197,198,199,203,222,223,227,228,232,233,237,238,239,240,242,243,245,247,249,251,253,255,258,261,263,265,267,269,271,273,276,278,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,],[20,20,20,20,20,20,20,20,20,-54,-55,-56,-57,-59,-58,-100,-31,57,74,74,74,74,74,74,74,74,74,74,112,-30,74,-11,74,143,-61,74,74,-65,-73,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-62,-66,-74,74,-63,-67,-75,74,-64,-68,-76,74,74,74,74,74,74,74,-12,-13,-14,-15,-16,-17,74,74,-107,74,-108,74,-109,74,-110,74,-111,74,-112,-18,-19,-20,-21,-22,-23,-69,-101,-70,-102,-71,-103,-72,-104,-105,-106,-83,-77,-84,-78,-85,-79,-86,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'SPVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,53,69,122,123,124,125,131,132,133,134,135,136,137,144,145,146,147,148,149,150,151,152,153,154,156,157,159,160,163,164,166,167,170,171,173,174,182,184,186,188,190,192,194,195,196,197,198,199,203,222,223,227,228,232,233,237,238,239,240,242,243,245,247,249,251,253,255,258,261,263,265,267,269,271,273,276,278,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,],[21,21,21,21,21,21,21,21,21,-54,-55,-56,-57,-59,-58,-100,-31,58,77,77,77,77,77,77,77,77,77,77,113,-30,77,-11,77,-61,77,77,-65,-73,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-62,-66,-74,77,-63,-67,-75,77,-64,-68,-76,77,77,77,77,77,77,77,-12,-13,-14,-15,-16,-17,77,77,-107,77,-108,77,-109,77,-110,77,-111,77,-112,-18,-19,-20,-21,-22,-23,-69,-101,-70,-102,-71,-103,-72,-104,-105,-106,-83,-77,-84,-78,-85,-79,-86,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'RAVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,53,69,122,123,124,125,131,132,133,134,135,136,137,144,145,146,147,148,149,150,151,152,153,154,156,157,159,160,163,164,166,167,170,171,173,174,182,184,186,188,190,192,194,195,196,197,198,199,203,222,223,227,228,232,233,237,238,239,240,242,243,245,247,249,251,253,255,258,261,263,265,267,269,271,273,276,278,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,],[22,22,22,22,22,22,22,22,22,-54,-55,-56,-57,-59,-58,-100,-31,59,76,76,76,76,76,76,76,76,76,76,114,-30,76,-11,76,-61,76,76,-65,-73,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-62,-66,-74,76,-63,-67,-75,76,-64,-68,-76,76,76,76,76,76,76,76,-12,-13,-14,-15,-16,-17,76,76,-107,76,-108,76,-109,76,-110,76,-111,76,-112,-18,-19,-20,-21,-22,-23,-69,-101,-70,-102,-71,-103,-72,-104,-105,-106,-83,-77,-84,-78,-85,-79,-86,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'L_PAR':([16,23,25,38,40,42,44,63,66,68,86,88,89,93,95,96,100,102,103,106,108,],[37,50,52,64,64,64,64,126,132,138,158,160,161,165,167,168,172,174,175,178,180,]),'ASSIGN':([17,18,19,20,21,22,155,162,169,176,177,179,],[38,40,42,44,47,49,222,227,232,237,239,242,]),'L_BRACKET':([17,18,19,20,21,22,109,110,111,112,113,114,],[39,41,43,45,46,48,182,184,186,188,190,192,]),'SEMICOLON':([24,35,38,40,42,44,60,61,62,65,67,69,70,72,73,74,75,76,77,78,79,80,81,83,84,85,87,91,92,94,98,99,101,116,117,118,119,120,121,123,124,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,162,169,176,177,179,181,183,185,187,189,191,200,201,202,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,226,227,229,231,232,234,236,237,239,241,242,244,259,260,262,264,266,268,270,272,274,275,277,285,296,297,298,299,300,301,],[51,53,-60,-60,-60,-60,-54,122,125,131,-52,-60,-36,-55,-56,-57,-43,-58,-59,-49,-50,-51,-53,-52,156,157,159,163,164,166,170,171,173,194,195,196,197,198,199,-60,-60,-35,-92,-93,-94,-95,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,223,228,233,238,240,243,245,247,249,251,253,255,-33,-34,258,-87,-88,-89,-90,-91,261,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-60,263,265,-60,267,269,-60,271,273,-60,-60,276,-60,278,-96,286,287,288,289,290,291,292,293,294,295,302,303,304,305,306,307,308,]),'READ':([38,40,42,44,],[63,86,93,100,]),'ABS':([38,40,42,44,],[66,88,95,102,]),'ARRAY':([38,40,42,44,47,49,],[68,89,96,103,106,108,]),'NOT':([38,40,42,44,52,69,123,124,222,227,232,237,239,242,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'NOT_B':([38,40,42,44,],[71,71,71,71,]),'INTEGER':([38,39,40,41,42,43,44,45,46,48,52,69,123,124,144,145,146,147,148,149,150,151,152,153,154,182,184,186,188,190,192,222,227,232,237,239,242,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'DECIMAL':([38,39,40,41,42,43,44,45,46,48,52,69,123,124,144,145,146,147,148,149,150,151,152,153,154,182,184,186,188,190,192,222,227,232,237,239,242,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'STRING':([38,39,40,41,42,43,44,45,46,48,52,69,123,124,144,145,146,147,148,149,150,151,152,153,154,182,184,186,188,190,192,222,227,232,237,239,242,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'EQUAL':([38,40,42,44,52,60,67,69,72,73,74,75,76,77,78,79,80,81,83,123,124,150,151,152,153,154,217,218,219,220,221,222,227,232,237,239,242,],[-60,-60,-60,-60,-60,-54,-52,-60,-55,-56,-57,144,-58,-59,-49,-50,-51,-53,-52,-60,-60,-60,-60,-60,-60,-60,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,]),'NOT_EQUAL':([38,40,42,44,52,60,67,69,72,73,74,75,76,77,78,79,80,81,83,123,124,150,151,152,153,154,217,218,219,220,221,222,227,232,237,239,242,],[-60,-60,-60,-60,-60,-54,-52,-60,-55,-56,-57,145,-58,-59,-49,-50,-51,-53,-52,-60,-60,-60,-60,-60,-60,-60,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,]),'GREATER':([38,40,42,44,52,60,67,69,72,73,74,75,76,77,78,79,80,81,83,123,124,150,151,152,153,154,217,218,219,220,221,222,227,232,237,239,242,],[-60,-60,-60,-60,-60,-54,-52,-60,-55,-56,-57,146,-58,-59,-49,-50,-51,-53,-52,-60,-60,-60,-60,-60,-60,-60,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,]),'LESS':([38,40,42,44,52,60,67,69,72,73,74,75,76,77,78,79,80,81,83,123,124,150,151,152,153,154,217,218,219,220,221,222,227,232,237,239,242,],[-60,-60,-60,-60,-60,-54,-52,-60,-55,-56,-57,147,-58,-59,-49,-50,-51,-53,-52,-60,-60,-60,-60,-60,-60,-60,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,]),'GREATER_EQUAL':([38,40,42,44,52,60,67,69,72,73,74,75,76,77,78,79,80,81,83,123,124,150,151,152,153,154,217,218,219,220,221,222,227,232,237,239,242,],[-60,-60,-60,-60,-60,-54,-52,-60,-55,-56,-57,148,-58,-59,-49,-50,-51,-53,-52,-60,-60,-60,-60,-60,-60,-60,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,]),'LESS_EQUAL':([38,40,42,44,52,60,67,69,72,73,74,75,76,77,78,79,80,81,83,123,124,150,151,152,153,154,217,218,219,220,221,222,227,232,237,239,242,],[-60,-60,-60,-60,-60,-54,-52,-60,-55,-56,-57,149,-58,-59,-49,-50,-51,-53,-52,-60,-60,-60,-60,-60,-60,-60,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,]),'PLUS':([38,39,40,41,42,43,44,45,46,48,52,60,67,69,72,73,74,75,76,77,78,79,80,81,82,83,90,97,104,105,107,123,124,144,145,146,147,148,149,150,151,152,153,154,182,184,186,188,190,192,211,212,213,214,215,216,217,218,219,220,221,222,227,232,237,239,242,246,248,250,252,254,256,],[-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-54,-52,-60,-55,-56,-57,150,-58,-59,-49,-50,-51,-53,150,-52,150,150,150,150,150,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,150,150,150,150,150,150,-44,-45,-46,-47,150,-60,-60,-60,-60,-60,-60,150,150,150,150,150,150,]),'MINUS':([38,39,40,41,42,43,44,45,46,48,52,60,67,69,72,73,74,75,76,77,78,79,80,81,82,83,90,97,104,105,107,123,124,144,145,146,147,148,149,150,151,152,153,154,182,184,186,188,190,192,211,212,213,214,215,216,217,218,219,220,221,222,227,232,237,239,242,246,248,250,252,254,256,],[-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-54,-52,-60,-55,-56,-57,151,-58,-59,-49,-50,-51,-53,151,-52,151,151,151,151,151,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,151,151,151,151,151,151,-44,-45,-46,-47,151,-60,-60,-60,-60,-60,-60,151,151,151,151,151,151,]),'MULTIPLY':([38,39,40,41,42,43,44,45,46,48,52,60,67,69,72,73,74,75,76,77,78,79,80,81,82,83,90,97,104,105,107,123,124,144,145,146,147,148,149,150,151,152,153,154,182,184,186,188,190,192,211,212,213,214,215,216,217,218,219,220,221,222,227,232,237,239,242,246,248,250,252,254,256,],[-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-54,-52,-60,-55,-56,-57,152,-58,-59,-49,-50,-51,-53,152,-52,152,152,152,152,152,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,152,152,152,152,152,152,152,152,-46,-47,152,-60,-60,-60,-60,-60,-60,152,152,152,152,152,152,]),'DIVIDE':([38,39,40,41,42,43,44,45,46,48,52,60,67,69,72,73,74,75,76,77,78,79,80,81,82,83,90,97,104,105,107,123,124,144,145,146,147,148,149,150,151,152,153,154,182,184,186,188,190,192,211,212,213,214,215,216,217,218,219,220,221,222,227,232,237,239,242,246,248,250,252,254,256,],[-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-54,-52,-60,-55,-56,-57,153,-58,-59,-49,-50,-51,-53,153,-52,153,153,153,153,153,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,153,153,153,153,153,153,153,153,-46,-47,153,-60,-60,-60,-60,-60,-60,153,153,153,153,153,153,]),'REMAINDER':([38,39,40,41,42,43,44,45,46,48,52,60,67,69,72,73,74,75,76,77,78,79,80,81,82,83,90,97,104,105,107,123,124,144,145,146,147,148,149,150,151,152,153,154,182,184,186,188,190,192,211,212,213,214,215,216,217,218,219,220,221,222,227,232,237,239,242,246,248,250,252,254,256,],[-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-54,-52,-60,-55,-56,-57,154,-58,-59,-49,-50,-51,-53,154,-52,154,154,154,154,154,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,154,154,154,154,154,154,-44,-45,-46,-47,154,-60,-60,-60,-60,-60,-60,154,154,154,154,154,154,]),'AND':([38,40,42,44,52,60,61,67,69,70,72,73,74,75,76,77,78,79,80,81,83,84,91,98,115,123,124,139,144,145,146,147,148,149,150,151,152,153,154,200,201,211,212,213,214,215,216,217,218,219,220,221,222,227,232,237,239,242,262,266,270,274,275,277,],[-60,-60,-60,-60,-60,-54,123,-52,-60,-36,-55,-56,-57,-43,-58,-59,-49,-50,-51,-53,-52,123,123,123,123,-60,-60,123,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-33,123,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,123,123,123,123,123,123,]),'OR':([38,40,42,44,52,60,61,67,69,70,72,73,74,75,76,77,78,79,80,81,83,84,91,98,115,123,124,139,144,145,146,147,148,149,150,151,152,153,154,200,201,211,212,213,214,215,216,217,218,219,220,221,222,227,232,237,239,242,262,266,270,274,275,277,],[-60,-60,-60,-60,-60,-54,124,-52,-60,-36,-55,-56,-57,-43,-58,-59,-49,-50,-51,-53,-52,124,124,124,124,-60,-60,124,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-33,-34,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,124,124,124,124,124,124,]),'R_BRACKET':([39,41,43,45,46,48,60,72,73,74,76,77,78,79,80,81,82,83,90,97,104,105,107,150,151,152,153,154,182,184,186,188,190,192,217,218,219,220,221,246,248,250,252,254,256,],[-60,-60,-60,-60,-60,-60,-54,-55,-56,-57,-58,-59,-49,-50,-51,-53,155,-52,162,169,176,177,179,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-44,-45,-46,-47,-48,279,280,281,282,283,284,]),'R_PAR':([52,54,55,56,57,58,59,60,69,70,72,73,74,75,76,77,78,79,80,81,83,109,110,111,112,113,114,115,123,124,126,127,128,129,130,138,139,144,145,146,147,148,149,150,151,152,153,154,158,161,165,168,172,175,178,180,200,201,204,211,212,213,214,215,216,217,218,219,220,221,225,230,235,279,280,281,282,283,284,],[-60,116,117,118,119,120,121,-54,-60,-36,-55,-56,-57,-43,-58,-59,-49,-50,-51,-53,-52,181,183,185,187,189,191,193,-60,-60,202,203,-97,-98,-99,210,-35,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,224,226,229,231,234,236,241,244,-33,-34,260,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,264,268,272,296,297,298,299,300,301,]),'AND_B':([60,67,72,73,74,76,77,],[-54,133,-55,-56,-57,-58,-59,]),'OR_B':([60,67,72,73,74,76,77,],[-54,134,-55,-56,-57,-58,-59,]),'XOR_B':([60,67,72,73,74,76,77,],[-54,135,-55,-56,-57,-58,-59,]),'SHIFT_L':([60,67,72,73,74,76,77,],[-54,136,-55,-56,-57,-58,-59,]),'SHIFT_R':([60,67,72,73,74,76,77,],[-54,137,-55,-56,-57,-58,-59,]),'INT':([64,],[128,]),'FLOAT':([64,],[129,]),'CHAR':([64,],[130,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'body':([3,5,6,7,8,9,10,11,12,],[4,27,28,29,30,31,32,33,34,]),'goto':([3,5,6,7,8,9,10,11,12,],[5,5,5,5,5,5,5,5,5,]),'unset':([3,5,6,7,8,9,10,11,12,],[6,6,6,6,6,6,6,6,6,]),'print':([3,5,6,7,8,9,10,11,12,],[7,7,7,7,7,7,7,7,7,]),'exit':([3,5,6,7,8,9,10,11,12,],[8,8,8,8,8,8,8,8,8,]),'tag':([3,5,6,7,8,9,10,11,12,],[9,9,9,9,9,9,9,9,9,]),'if':([3,5,6,7,8,9,10,11,12,],[10,10,10,10,10,10,10,10,10,]),'assign':([3,5,6,7,8,9,10,11,12,],[11,11,11,11,11,11,11,11,11,]),'declaration':([3,5,6,7,8,9,10,11,12,],[12,12,12,12,12,12,12,12,12,]),'empty':([3,5,6,7,8,9,10,11,12,],[13,13,13,13,13,13,13,13,13,]),'var':([3,5,6,7,8,9,10,11,12,38,39,40,41,42,43,44,45,46,48,52,69,123,124,132,133,134,135,136,137,144,145,146,147,148,149,150,151,152,153,154,160,167,174,182,184,186,188,190,192,203,222,227,232,237,239,242,],[26,26,26,26,26,26,26,26,26,67,83,67,83,67,83,67,83,83,83,83,83,83,83,204,205,206,207,208,209,83,83,83,83,83,83,83,83,83,83,83,225,230,235,83,83,83,83,83,83,259,83,83,83,83,83,83,]),'condition':([38,40,42,44,52,69,123,124,222,227,232,237,239,242,],[61,84,91,98,115,139,200,201,262,266,270,274,275,277,]),'conversion':([38,40,42,44,],[62,85,92,99,]),'bitwise':([38,40,42,44,],[65,87,94,101,]),'relational':([38,40,42,44,52,69,123,124,222,227,232,237,239,242,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'arithmetic':([38,39,40,41,42,43,44,45,46,48,52,69,123,124,144,145,146,147,148,149,150,151,152,153,154,182,184,186,188,190,192,222,227,232,237,239,242,],[75,82,75,90,75,97,75,104,105,107,75,75,75,75,211,212,213,214,215,216,217,218,219,220,221,246,248,250,252,254,256,75,75,75,75,75,75,]),'array_access':([38,39,40,41,42,43,44,45,46,48,52,69,123,124,144,145,146,147,148,149,150,151,152,153,154,182,184,186,188,190,192,222,227,232,237,239,242,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'type':([64,],[127,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> MAIN COLON body','start',3,'p_start','gramatica_asc.py',216),
  ('body -> goto body','body',2,'p_body','gramatica_asc.py',227),
  ('body -> unset body','body',2,'p_body','gramatica_asc.py',228),
  ('body -> print body','body',2,'p_body','gramatica_asc.py',229),
  ('body -> exit body','body',2,'p_body','gramatica_asc.py',230),
  ('body -> tag body','body',2,'p_body','gramatica_asc.py',231),
  ('body -> if body','body',2,'p_body','gramatica_asc.py',232),
  ('body -> assign body','body',2,'p_body','gramatica_asc.py',233),
  ('body -> declaration body','body',2,'p_body','gramatica_asc.py',234),
  ('body -> empty','body',1,'p_body_e','gramatica_asc.py',241),
  ('goto -> GOTO NAME SEMICOLON','goto',3,'p_goto','gramatica_asc.py',248),
  ('unset -> UNSET L_PAR TVAR R_PAR SEMICOLON','unset',5,'p_unset','gramatica_asc.py',255),
  ('unset -> UNSET L_PAR AVAR R_PAR SEMICOLON','unset',5,'p_unset','gramatica_asc.py',256),
  ('unset -> UNSET L_PAR VVAR R_PAR SEMICOLON','unset',5,'p_unset','gramatica_asc.py',257),
  ('unset -> UNSET L_PAR SVAR R_PAR SEMICOLON','unset',5,'p_unset','gramatica_asc.py',258),
  ('unset -> UNSET L_PAR SPVAR R_PAR SEMICOLON','unset',5,'p_unset','gramatica_asc.py',259),
  ('unset -> UNSET L_PAR RAVAR R_PAR SEMICOLON','unset',5,'p_unset','gramatica_asc.py',260),
  ('print -> PRINT L_PAR TVAR R_PAR SEMICOLON','print',5,'p_print_1','gramatica_asc.py',267),
  ('print -> PRINT L_PAR AVAR R_PAR SEMICOLON','print',5,'p_print_1','gramatica_asc.py',268),
  ('print -> PRINT L_PAR VVAR R_PAR SEMICOLON','print',5,'p_print_1','gramatica_asc.py',269),
  ('print -> PRINT L_PAR SVAR R_PAR SEMICOLON','print',5,'p_print_1','gramatica_asc.py',270),
  ('print -> PRINT L_PAR SPVAR R_PAR SEMICOLON','print',5,'p_print_1','gramatica_asc.py',271),
  ('print -> PRINT L_PAR RAVAR R_PAR SEMICOLON','print',5,'p_print_1','gramatica_asc.py',272),
  ('print -> PRINT L_PAR TVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON','print',8,'p_print_2','gramatica_asc.py',279),
  ('print -> PRINT L_PAR AVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON','print',8,'p_print_2','gramatica_asc.py',280),
  ('print -> PRINT L_PAR VVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON','print',8,'p_print_2','gramatica_asc.py',281),
  ('print -> PRINT L_PAR SVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON','print',8,'p_print_2','gramatica_asc.py',282),
  ('print -> PRINT L_PAR SPVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON','print',8,'p_print_2','gramatica_asc.py',283),
  ('print -> PRINT L_PAR RAVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON','print',8,'p_print_2','gramatica_asc.py',284),
  ('exit -> EXIT SEMICOLON','exit',2,'p_exit','gramatica_asc.py',292),
  ('tag -> NAME COLON','tag',2,'p_tag','gramatica_asc.py',299),
  ('if -> IF L_PAR condition R_PAR GOTO NAME SEMICOLON','if',7,'p_if','gramatica_asc.py',306),
  ('condition -> condition AND condition','condition',3,'p_condition_1','gramatica_asc.py',313),
  ('condition -> condition OR condition','condition',3,'p_condition_1','gramatica_asc.py',314),
  ('condition -> NOT condition','condition',2,'p_condition_2','gramatica_asc.py',321),
  ('condition -> relational','condition',1,'p_condition_3','gramatica_asc.py',328),
  ('relational -> arithmetic EQUAL arithmetic','relational',3,'p_relational_1','gramatica_asc.py',335),
  ('relational -> arithmetic NOT_EQUAL arithmetic','relational',3,'p_relational_1','gramatica_asc.py',336),
  ('relational -> arithmetic GREATER arithmetic','relational',3,'p_relational_1','gramatica_asc.py',337),
  ('relational -> arithmetic LESS arithmetic','relational',3,'p_relational_1','gramatica_asc.py',338),
  ('relational -> arithmetic GREATER_EQUAL arithmetic','relational',3,'p_relational_1','gramatica_asc.py',339),
  ('relational -> arithmetic LESS_EQUAL arithmetic','relational',3,'p_relational_1','gramatica_asc.py',340),
  ('relational -> arithmetic','relational',1,'p_relational_2','gramatica_asc.py',347),
  ('arithmetic -> arithmetic PLUS arithmetic','arithmetic',3,'p_arithmetic_1','gramatica_asc.py',354),
  ('arithmetic -> arithmetic MINUS arithmetic','arithmetic',3,'p_arithmetic_1','gramatica_asc.py',355),
  ('arithmetic -> arithmetic MULTIPLY arithmetic','arithmetic',3,'p_arithmetic_1','gramatica_asc.py',356),
  ('arithmetic -> arithmetic DIVIDE arithmetic','arithmetic',3,'p_arithmetic_1','gramatica_asc.py',357),
  ('arithmetic -> arithmetic REMAINDER arithmetic','arithmetic',3,'p_arithmetic_1','gramatica_asc.py',358),
  ('arithmetic -> INTEGER','arithmetic',1,'p_arithmetic_2','gramatica_asc.py',365),
  ('arithmetic -> DECIMAL','arithmetic',1,'p_arithmetic_2','gramatica_asc.py',366),
  ('arithmetic -> STRING','arithmetic',1,'p_arithmetic_2','gramatica_asc.py',367),
  ('arithmetic -> var','arithmetic',1,'p_arithmetic_2','gramatica_asc.py',368),
  ('arithmetic -> array_access','arithmetic',1,'p_arithmetic_2','gramatica_asc.py',369),
  ('var -> TVAR','var',1,'p_var','gramatica_asc.py',376),
  ('var -> AVAR','var',1,'p_var','gramatica_asc.py',377),
  ('var -> VVAR','var',1,'p_var','gramatica_asc.py',378),
  ('var -> SVAR','var',1,'p_var','gramatica_asc.py',379),
  ('var -> RAVAR','var',1,'p_var','gramatica_asc.py',380),
  ('var -> SPVAR','var',1,'p_var','gramatica_asc.py',381),
  ('array_access -> <empty>','array_access',0,'p_array_access','gramatica_asc.py',388),
  ('assign -> TVAR ASSIGN condition SEMICOLON','assign',4,'p_assign_1','gramatica_asc.py',394),
  ('assign -> AVAR ASSIGN condition SEMICOLON','assign',4,'p_assign_1','gramatica_asc.py',395),
  ('assign -> VVAR ASSIGN condition SEMICOLON','assign',4,'p_assign_1','gramatica_asc.py',396),
  ('assign -> SVAR ASSIGN condition SEMICOLON','assign',4,'p_assign_1','gramatica_asc.py',397),
  ('assign -> TVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','gramatica_asc.py',404),
  ('assign -> AVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','gramatica_asc.py',405),
  ('assign -> VVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','gramatica_asc.py',406),
  ('assign -> SVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','gramatica_asc.py',407),
  ('assign -> TVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','gramatica_asc.py',414),
  ('assign -> AVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','gramatica_asc.py',415),
  ('assign -> VVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','gramatica_asc.py',416),
  ('assign -> SVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','gramatica_asc.py',417),
  ('assign -> TVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','gramatica_asc.py',424),
  ('assign -> AVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','gramatica_asc.py',425),
  ('assign -> VVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','gramatica_asc.py',426),
  ('assign -> SVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','gramatica_asc.py',427),
  ('assign -> TVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON','assign',7,'p_assign_5','gramatica_asc.py',434),
  ('assign -> AVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON','assign',7,'p_assign_5','gramatica_asc.py',435),
  ('assign -> VVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON','assign',7,'p_assign_5','gramatica_asc.py',436),
  ('assign -> SVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON','assign',7,'p_assign_5','gramatica_asc.py',437),
  ('assign -> SPVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON','assign',7,'p_assign_5','gramatica_asc.py',438),
  ('assign -> RAVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON','assign',7,'p_assign_5','gramatica_asc.py',439),
  ('assign -> TVAR ASSIGN ABS L_PAR var R_PAR SEMICOLON','assign',7,'p_assign_6','gramatica_asc.py',446),
  ('assign -> AVAR ASSIGN ABS L_PAR var R_PAR SEMICOLON','assign',7,'p_assign_6','gramatica_asc.py',447),
  ('assign -> VVAR ASSIGN ABS L_PAR var R_PAR SEMICOLON','assign',7,'p_assign_6','gramatica_asc.py',448),
  ('assign -> SVAR ASSIGN ABS L_PAR var R_PAR SEMICOLON','assign',7,'p_assign_6','gramatica_asc.py',449),
  ('bitwise -> var AND_B var','bitwise',3,'p_bitwise_1','gramatica_asc.py',456),
  ('bitwise -> var OR_B var','bitwise',3,'p_bitwise_1','gramatica_asc.py',457),
  ('bitwise -> var XOR_B var','bitwise',3,'p_bitwise_1','gramatica_asc.py',458),
  ('bitwise -> var SHIFT_L var','bitwise',3,'p_bitwise_1','gramatica_asc.py',459),
  ('bitwise -> var SHIFT_R var','bitwise',3,'p_bitwise_1','gramatica_asc.py',460),
  ('bitwise -> NOT_B TVAR','bitwise',2,'p_bitwise_2','gramatica_asc.py',467),
  ('bitwise -> NOT_B AVAR','bitwise',2,'p_bitwise_2','gramatica_asc.py',468),
  ('bitwise -> NOT_B VVAR','bitwise',2,'p_bitwise_2','gramatica_asc.py',469),
  ('bitwise -> NOT_B SVAR','bitwise',2,'p_bitwise_2','gramatica_asc.py',470),
  ('conversion -> L_PAR type R_PAR var','conversion',4,'p_conversion','gramatica_asc.py',477),
  ('type -> INT','type',1,'p_type','gramatica_asc.py',484),
  ('type -> FLOAT','type',1,'p_type','gramatica_asc.py',485),
  ('type -> CHAR','type',1,'p_type','gramatica_asc.py',486),
  ('declaration -> var','declaration',1,'p_declaration_1','gramatica_asc.py',493),
  ('declaration -> TVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','gramatica_asc.py',500),
  ('declaration -> AVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','gramatica_asc.py',501),
  ('declaration -> VVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','gramatica_asc.py',502),
  ('declaration -> SVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','gramatica_asc.py',503),
  ('declaration -> SPVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','gramatica_asc.py',504),
  ('declaration -> RAVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','gramatica_asc.py',505),
  ('declaration -> TVAR L_BRACKET arithmetic R_BRACKET SEMICOLON','declaration',5,'p_declaration_3','gramatica_asc.py',512),
  ('declaration -> AVAR L_BRACKET arithmetic R_BRACKET SEMICOLON','declaration',5,'p_declaration_3','gramatica_asc.py',513),
  ('declaration -> VVAR L_BRACKET arithmetic R_BRACKET SEMICOLON','declaration',5,'p_declaration_3','gramatica_asc.py',514),
  ('declaration -> SVAR L_BRACKET arithmetic R_BRACKET SEMICOLON','declaration',5,'p_declaration_3','gramatica_asc.py',515),
  ('declaration -> SPVAR L_BRACKET arithmetic R_BRACKET SEMICOLON','declaration',5,'p_declaration_3','gramatica_asc.py',516),
  ('declaration -> RAVAR L_BRACKET arithmetic R_BRACKET SEMICOLON','declaration',5,'p_declaration_3','gramatica_asc.py',517),
  ('empty -> <empty>','empty',0,'p_empty','gramatica_asc.py',525),
]
