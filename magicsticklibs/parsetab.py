
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOR_BleftAND_BleftORleftANDleftPLUSMINUSleftMULTIPLYDIVIDEABS AND AND_B ARRAY ASSIGN AVAR CHAR COLON COMMA COMMENT DECIMAL DIVIDE EQUAL EXIT FLOAT GOTO GREATER GREATER_EQUAL IF INT INTEGER LESS LESS_EQUAL L_BRACKET L_PAR MAIN MINUS MULTIPLY NAME NOT NOT_B NOT_EQUAL OR OR_B PLUS PRINT QUOTE_1 QUOTE_2 RAVAR READ REMAINDER R_BRACKET R_PAR SEMICOLON SHIFT_L SHIFT_R SPVAR STRING SVAR TVAR UNSET VVAR XOR XOR_B\n        start : MAIN COLON body\n        \n        body : goto body\n            | unset body\n            | print body\n            | exit body\n            | tag body\n            | if body\n            | assign body\n            | declaration body\n        \n        body : empty\n        \n        goto : GOTO NAME SEMICOLON\n        \n        unset : UNSET L_PAR TVAR R_PAR SEMICOLON\n            | UNSET L_PAR AVAR R_PAR SEMICOLON\n            | UNSET L_PAR VVAR R_PAR SEMICOLON\n            | UNSET L_PAR SVAR R_PAR SEMICOLON\n            | UNSET L_PAR SPVAR R_PAR SEMICOLON\n            | UNSET L_PAR RAVAR R_PAR SEMICOLON\n        \n        print : PRINT L_PAR TVAR R_PAR SEMICOLON\n            | PRINT L_PAR AVAR R_PAR SEMICOLON\n            | PRINT L_PAR VVAR R_PAR SEMICOLON\n            | PRINT L_PAR SVAR R_PAR SEMICOLON\n            | PRINT L_PAR SPVAR R_PAR SEMICOLON\n            | PRINT L_PAR RAVAR R_PAR SEMICOLON\n        \n        print : PRINT L_PAR TVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON\n            | PRINT L_PAR AVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON\n            | PRINT L_PAR VVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON\n            | PRINT L_PAR SVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON\n            | PRINT L_PAR SPVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON\n            | PRINT L_PAR RAVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON\n        \n        exit : EXIT SEMICOLON\n        \n        tag : NAME COLON\n        \n        if : IF L_PAR condition R_PAR GOTO NAME SEMICOLON\n        \n        condition : condition AND condition\n            | condition OR condition\n        \n        condition : NOT condition\n        \n        condition : relational\n        \n        relational : arithmetic EQUAL arithmetic\n            | arithmetic NOT_EQUAL arithmetic\n            | arithmetic GREATER arithmetic\n            | arithmetic LESS arithmetic\n            | arithmetic GREATER_EQUAL arithmetic\n            | arithmetic LESS_EQUAL arithmetic\n        \n        relational : arithmetic\n        \n        arithmetic : arithmetic PLUS arithmetic\n            | arithmetic MINUS arithmetic\n            | arithmetic MULTIPLY arithmetic\n            | arithmetic DIVIDE arithmetic\n            | arithmetic REMAINDER arithmetic\n        \n        arithmetic : INTEGER\n            | DECIMAL\n            | STRING\n            | var\n            | array_access\n        \n        var : TVAR\n            | AVAR\n            | VVAR\n            | SVAR\n            | RAVAR\n            | SPVAR\n        \n        array_access : \n        \n        assign : TVAR ASSIGN condition SEMICOLON\n            | AVAR ASSIGN condition SEMICOLON\n            | VVAR ASSIGN condition SEMICOLON\n            | SVAR ASSIGN condition SEMICOLON\n        \n        assign : TVAR ASSIGN conversion SEMICOLON\n            | AVAR ASSIGN conversion SEMICOLON\n            | VVAR ASSIGN conversion SEMICOLON\n            | SVAR ASSIGN conversion SEMICOLON\n        \n        assign : TVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n            | AVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n            | VVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n            | SVAR ASSIGN READ L_PAR R_PAR SEMICOLON\n        \n        assign : TVAR ASSIGN bitwise SEMICOLON\n            | AVAR ASSIGN bitwise SEMICOLON\n            | VVAR ASSIGN bitwise SEMICOLON\n            | SVAR ASSIGN bitwise SEMICOLON\n        \n        assign : TVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON\n            | AVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON\n            | VVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON\n            | SVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON\n            | SPVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON\n            | RAVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON\n        \n        bitwise : var AND_B var\n            | var OR_B var\n            | var XOR_B var\n            | var SHIFT_L var\n            | var SHIFT_R var\n        \n        bitwise : NOT_B TVAR\n            | NOT_B AVAR\n            | NOT_B VVAR\n            | NOT_B SVAR\n        \n        conversion : L_PAR type R_PAR var\n        \n        type : INT\n            | FLOAT\n            | CHAR\n        \n        declaration : var\n        \n        declaration : TVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n            | AVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n            | VVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n            | SVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n            | SPVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n            | RAVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON\n        \n        declaration : TVAR L_BRACKET arithmetic R_BRACKET SEMICOLON\n            | AVAR L_BRACKET arithmetic R_BRACKET SEMICOLON\n            | VVAR L_BRACKET arithmetic R_BRACKET SEMICOLON\n            | SVAR L_BRACKET arithmetic R_BRACKET SEMICOLON\n            | SPVAR L_BRACKET arithmetic R_BRACKET SEMICOLON\n            | RAVAR L_BRACKET arithmetic R_BRACKET SEMICOLON\n        \n        empty :\n        '
    
_lr_action_items = {'MAIN':([0,],[2,]),'$end':([1,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,21,22,26,27,28,29,30,31,32,33,34,36,51,53,118,121,127,151,152,154,157,158,160,163,164,166,186,187,188,189,190,191,214,218,222,226,228,231,233,235,237,239,241,243,246,248,250,251,253,254,256,257,260,262,270,271,272,273,274,275,282,283,284,285,286,287,288,],[0,-109,-1,-109,-109,-109,-109,-109,-109,-109,-109,-10,-54,-55,-56,-57,-59,-58,-96,-2,-3,-4,-5,-6,-7,-8,-9,-31,-30,-11,-61,-65,-73,-62,-66,-74,-63,-67,-75,-64,-68,-76,-12,-13,-14,-15,-16,-17,-103,-104,-105,-106,-107,-108,-18,-19,-20,-21,-22,-23,-69,-97,-70,-98,-71,-99,-72,-100,-101,-102,-77,-78,-79,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'COLON':([2,15,],[3,36,]),'GOTO':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,51,53,118,121,127,151,152,154,157,158,160,163,164,166,185,186,187,188,189,190,191,214,218,222,226,228,231,233,235,237,239,241,243,246,248,250,251,253,254,256,257,260,262,270,271,272,273,274,275,282,283,284,285,286,287,288,],[14,14,14,14,14,14,14,14,14,-54,-55,-56,-57,-59,-58,-96,-31,-30,-11,-61,-65,-73,-62,-66,-74,-63,-67,-75,-64,-68,-76,245,-12,-13,-14,-15,-16,-17,-103,-104,-105,-106,-107,-108,-18,-19,-20,-21,-22,-23,-69,-97,-70,-98,-71,-99,-72,-100,-101,-102,-77,-78,-79,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'UNSET':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,51,53,118,121,127,151,152,154,157,158,160,163,164,166,186,187,188,189,190,191,214,218,222,226,228,231,233,235,237,239,241,243,246,248,250,251,253,254,256,257,260,262,270,271,272,273,274,275,282,283,284,285,286,287,288,],[16,16,16,16,16,16,16,16,16,-54,-55,-56,-57,-59,-58,-96,-31,-30,-11,-61,-65,-73,-62,-66,-74,-63,-67,-75,-64,-68,-76,-12,-13,-14,-15,-16,-17,-103,-104,-105,-106,-107,-108,-18,-19,-20,-21,-22,-23,-69,-97,-70,-98,-71,-99,-72,-100,-101,-102,-77,-78,-79,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'PRINT':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,51,53,118,121,127,151,152,154,157,158,160,163,164,166,186,187,188,189,190,191,214,218,222,226,228,231,233,235,237,239,241,243,246,248,250,251,253,254,256,257,260,262,270,271,272,273,274,275,282,283,284,285,286,287,288,],[23,23,23,23,23,23,23,23,23,-54,-55,-56,-57,-59,-58,-96,-31,-30,-11,-61,-65,-73,-62,-66,-74,-63,-67,-75,-64,-68,-76,-12,-13,-14,-15,-16,-17,-103,-104,-105,-106,-107,-108,-18,-19,-20,-21,-22,-23,-69,-97,-70,-98,-71,-99,-72,-100,-101,-102,-77,-78,-79,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'EXIT':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,51,53,118,121,127,151,152,154,157,158,160,163,164,166,186,187,188,189,190,191,214,218,222,226,228,231,233,235,237,239,241,243,246,248,250,251,253,254,256,257,260,262,270,271,272,273,274,275,282,283,284,285,286,287,288,],[24,24,24,24,24,24,24,24,24,-54,-55,-56,-57,-59,-58,-96,-31,-30,-11,-61,-65,-73,-62,-66,-74,-63,-67,-75,-64,-68,-76,-12,-13,-14,-15,-16,-17,-103,-104,-105,-106,-107,-108,-18,-19,-20,-21,-22,-23,-69,-97,-70,-98,-71,-99,-72,-100,-101,-102,-77,-78,-79,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'NAME':([3,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,26,36,51,53,118,121,127,151,152,154,157,158,160,163,164,166,186,187,188,189,190,191,214,218,222,226,228,231,233,235,237,239,241,243,245,246,248,250,251,253,254,256,257,260,262,270,271,272,273,274,275,282,283,284,285,286,287,288,],[15,15,15,15,15,15,15,15,15,35,-54,-55,-56,-57,-59,-58,-96,-31,-30,-11,-61,-65,-73,-62,-66,-74,-63,-67,-75,-64,-68,-76,-12,-13,-14,-15,-16,-17,-103,-104,-105,-106,-107,-108,-18,-19,-20,-21,-22,-23,269,-69,-97,-70,-98,-71,-99,-72,-100,-101,-102,-77,-78,-79,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'IF':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,51,53,118,121,127,151,152,154,157,158,160,163,164,166,186,187,188,189,190,191,214,218,222,226,228,231,233,235,237,239,241,243,246,248,250,251,253,254,256,257,260,262,270,271,272,273,274,275,282,283,284,285,286,287,288,],[25,25,25,25,25,25,25,25,25,-54,-55,-56,-57,-59,-58,-96,-31,-30,-11,-61,-65,-73,-62,-66,-74,-63,-67,-75,-64,-68,-76,-12,-13,-14,-15,-16,-17,-103,-104,-105,-106,-107,-108,-18,-19,-20,-21,-22,-23,-69,-97,-70,-98,-71,-99,-72,-100,-101,-102,-77,-78,-79,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'TVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,53,67,70,118,119,120,121,127,130,131,132,133,134,139,140,141,142,143,144,145,146,147,148,149,151,152,154,157,158,160,163,164,166,174,176,178,180,182,184,186,187,188,189,190,191,195,213,214,217,218,221,222,225,226,227,228,230,231,233,235,237,239,241,243,246,248,250,251,253,254,256,257,260,262,270,271,272,273,274,275,282,283,284,285,286,287,288,],[17,17,17,17,17,17,17,17,17,-54,-55,-56,-57,-59,-58,-96,-31,54,60,60,60,60,60,60,60,60,60,60,105,-30,60,-11,60,135,-61,60,60,-65,-73,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-62,-66,-74,-63,-67,-75,-64,-68,-76,60,60,60,60,60,60,-12,-13,-14,-15,-16,-17,60,60,-103,60,-104,60,-105,60,-106,60,-107,60,-108,-18,-19,-20,-21,-22,-23,-69,-97,-70,-98,-71,-99,-72,-100,-101,-102,-77,-78,-79,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'AVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,53,67,70,118,119,120,121,127,130,131,132,133,134,139,140,141,142,143,144,145,146,147,148,149,151,152,154,157,158,160,163,164,166,174,176,178,180,182,184,186,187,188,189,190,191,195,213,214,217,218,221,222,225,226,227,228,230,231,233,235,237,239,241,243,246,248,250,251,253,254,256,257,260,262,270,271,272,273,274,275,282,283,284,285,286,287,288,],[18,18,18,18,18,18,18,18,18,-54,-55,-56,-57,-59,-58,-96,-31,55,71,71,71,71,71,71,71,71,71,71,106,-30,71,-11,71,136,-61,71,71,-65,-73,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-62,-66,-74,-63,-67,-75,-64,-68,-76,71,71,71,71,71,71,-12,-13,-14,-15,-16,-17,71,71,-103,71,-104,71,-105,71,-106,71,-107,71,-108,-18,-19,-20,-21,-22,-23,-69,-97,-70,-98,-71,-99,-72,-100,-101,-102,-77,-78,-79,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'VVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,53,67,70,118,119,120,121,127,130,131,132,133,134,139,140,141,142,143,144,145,146,147,148,149,151,152,154,157,158,160,163,164,166,174,176,178,180,182,184,186,187,188,189,190,191,195,213,214,217,218,221,222,225,226,227,228,230,231,233,235,237,239,241,243,246,248,250,251,253,254,256,257,260,262,270,271,272,273,274,275,282,283,284,285,286,287,288,],[19,19,19,19,19,19,19,19,19,-54,-55,-56,-57,-59,-58,-96,-31,56,72,72,72,72,72,72,72,72,72,72,107,-30,72,-11,72,137,-61,72,72,-65,-73,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-62,-66,-74,-63,-67,-75,-64,-68,-76,72,72,72,72,72,72,-12,-13,-14,-15,-16,-17,72,72,-103,72,-104,72,-105,72,-106,72,-107,72,-108,-18,-19,-20,-21,-22,-23,-69,-97,-70,-98,-71,-99,-72,-100,-101,-102,-77,-78,-79,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'SVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,53,67,70,118,119,120,121,127,130,131,132,133,134,139,140,141,142,143,144,145,146,147,148,149,151,152,154,157,158,160,163,164,166,174,176,178,180,182,184,186,187,188,189,190,191,195,213,214,217,218,221,222,225,226,227,228,230,231,233,235,237,239,241,243,246,248,250,251,253,254,256,257,260,262,270,271,272,273,274,275,282,283,284,285,286,287,288,],[20,20,20,20,20,20,20,20,20,-54,-55,-56,-57,-59,-58,-96,-31,57,73,73,73,73,73,73,73,73,73,73,108,-30,73,-11,73,138,-61,73,73,-65,-73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-62,-66,-74,-63,-67,-75,-64,-68,-76,73,73,73,73,73,73,-12,-13,-14,-15,-16,-17,73,73,-103,73,-104,73,-105,73,-106,73,-107,73,-108,-18,-19,-20,-21,-22,-23,-69,-97,-70,-98,-71,-99,-72,-100,-101,-102,-77,-78,-79,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'SPVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,53,67,118,119,120,121,127,130,131,132,133,134,139,140,141,142,143,144,145,146,147,148,149,151,152,154,157,158,160,163,164,166,174,176,178,180,182,184,186,187,188,189,190,191,195,213,214,217,218,221,222,225,226,227,228,230,231,233,235,237,239,241,243,246,248,250,251,253,254,256,257,260,262,270,271,272,273,274,275,282,283,284,285,286,287,288,],[21,21,21,21,21,21,21,21,21,-54,-55,-56,-57,-59,-58,-96,-31,58,76,76,76,76,76,76,76,76,76,76,109,-30,76,-11,76,-61,76,76,-65,-73,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-62,-66,-74,-63,-67,-75,-64,-68,-76,76,76,76,76,76,76,-12,-13,-14,-15,-16,-17,76,76,-103,76,-104,76,-105,76,-106,76,-107,76,-108,-18,-19,-20,-21,-22,-23,-69,-97,-70,-98,-71,-99,-72,-100,-101,-102,-77,-78,-79,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'RAVAR':([3,5,6,7,8,9,10,11,12,17,18,19,20,21,22,26,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,53,67,118,119,120,121,127,130,131,132,133,134,139,140,141,142,143,144,145,146,147,148,149,151,152,154,157,158,160,163,164,166,174,176,178,180,182,184,186,187,188,189,190,191,195,213,214,217,218,221,222,225,226,227,228,230,231,233,235,237,239,241,243,246,248,250,251,253,254,256,257,260,262,270,271,272,273,274,275,282,283,284,285,286,287,288,],[22,22,22,22,22,22,22,22,22,-54,-55,-56,-57,-59,-58,-96,-31,59,75,75,75,75,75,75,75,75,75,75,110,-30,75,-11,75,-61,75,75,-65,-73,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-62,-66,-74,-63,-67,-75,-64,-68,-76,75,75,75,75,75,75,-12,-13,-14,-15,-16,-17,75,75,-103,75,-104,75,-105,75,-106,75,-107,75,-108,-18,-19,-20,-21,-22,-23,-69,-97,-70,-98,-71,-99,-72,-100,-101,-102,-77,-78,-79,-80,-81,-82,-32,-24,-25,-26,-27,-28,-29,]),'L_PAR':([16,23,25,38,40,42,44,63,66,85,87,91,93,97,99,102,104,],[37,50,52,64,64,64,64,122,128,153,155,159,161,165,167,170,172,]),'ASSIGN':([17,18,19,20,21,22,150,156,162,168,169,171,],[38,40,42,44,47,49,213,217,221,225,227,230,]),'L_BRACKET':([17,18,19,20,21,22,105,106,107,108,109,110,],[39,41,43,45,46,48,174,176,178,180,182,184,]),'SEMICOLON':([24,35,38,40,42,44,60,61,62,65,67,68,69,71,72,73,74,75,76,77,78,79,80,82,83,84,86,89,90,92,95,96,98,112,113,114,115,116,117,119,120,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,156,162,168,169,171,173,175,177,179,181,183,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,219,220,221,223,224,225,227,229,230,232,247,249,252,255,258,259,261,269,276,277,278,279,280,281,],[51,53,-60,-60,-60,-60,-54,118,121,127,-60,-36,-52,-55,-56,-57,-43,-58,-59,-49,-50,-51,-53,-52,151,152,154,157,158,160,163,164,166,186,187,188,189,190,191,-60,-60,-35,-88,-89,-90,-91,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,214,218,222,226,228,231,233,235,237,239,241,243,-33,-34,246,248,-83,-84,-85,-86,-87,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-60,250,251,-60,253,254,-60,256,257,-60,-60,260,-60,262,-92,270,271,272,273,274,275,282,283,284,285,286,287,288,]),'READ':([38,40,42,44,],[63,85,91,97,]),'ARRAY':([38,40,42,44,47,49,],[66,87,93,99,102,104,]),'NOT':([38,40,42,44,52,67,119,120,213,217,221,225,227,230,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'NOT_B':([38,40,42,44,],[70,70,70,70,]),'INTEGER':([38,39,40,41,42,43,44,45,46,48,52,67,119,120,139,140,141,142,143,144,145,146,147,148,149,174,176,178,180,182,184,213,217,221,225,227,230,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'DECIMAL':([38,39,40,41,42,43,44,45,46,48,52,67,119,120,139,140,141,142,143,144,145,146,147,148,149,174,176,178,180,182,184,213,217,221,225,227,230,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'STRING':([38,39,40,41,42,43,44,45,46,48,52,67,119,120,139,140,141,142,143,144,145,146,147,148,149,174,176,178,180,182,184,213,217,221,225,227,230,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'EQUAL':([38,40,42,44,52,60,67,69,71,72,73,74,75,76,77,78,79,80,82,119,120,145,146,147,148,149,208,209,210,211,212,213,217,221,225,227,230,],[-60,-60,-60,-60,-60,-54,-60,-52,-55,-56,-57,139,-58,-59,-49,-50,-51,-53,-52,-60,-60,-60,-60,-60,-60,-60,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,]),'NOT_EQUAL':([38,40,42,44,52,60,67,69,71,72,73,74,75,76,77,78,79,80,82,119,120,145,146,147,148,149,208,209,210,211,212,213,217,221,225,227,230,],[-60,-60,-60,-60,-60,-54,-60,-52,-55,-56,-57,140,-58,-59,-49,-50,-51,-53,-52,-60,-60,-60,-60,-60,-60,-60,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,]),'GREATER':([38,40,42,44,52,60,67,69,71,72,73,74,75,76,77,78,79,80,82,119,120,145,146,147,148,149,208,209,210,211,212,213,217,221,225,227,230,],[-60,-60,-60,-60,-60,-54,-60,-52,-55,-56,-57,141,-58,-59,-49,-50,-51,-53,-52,-60,-60,-60,-60,-60,-60,-60,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,]),'LESS':([38,40,42,44,52,60,67,69,71,72,73,74,75,76,77,78,79,80,82,119,120,145,146,147,148,149,208,209,210,211,212,213,217,221,225,227,230,],[-60,-60,-60,-60,-60,-54,-60,-52,-55,-56,-57,142,-58,-59,-49,-50,-51,-53,-52,-60,-60,-60,-60,-60,-60,-60,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,]),'GREATER_EQUAL':([38,40,42,44,52,60,67,69,71,72,73,74,75,76,77,78,79,80,82,119,120,145,146,147,148,149,208,209,210,211,212,213,217,221,225,227,230,],[-60,-60,-60,-60,-60,-54,-60,-52,-55,-56,-57,143,-58,-59,-49,-50,-51,-53,-52,-60,-60,-60,-60,-60,-60,-60,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,]),'LESS_EQUAL':([38,40,42,44,52,60,67,69,71,72,73,74,75,76,77,78,79,80,82,119,120,145,146,147,148,149,208,209,210,211,212,213,217,221,225,227,230,],[-60,-60,-60,-60,-60,-54,-60,-52,-55,-56,-57,144,-58,-59,-49,-50,-51,-53,-52,-60,-60,-60,-60,-60,-60,-60,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,]),'PLUS':([38,39,40,41,42,43,44,45,46,48,52,60,67,69,71,72,73,74,75,76,77,78,79,80,81,82,88,94,100,101,103,119,120,139,140,141,142,143,144,145,146,147,148,149,174,176,178,180,182,184,202,203,204,205,206,207,208,209,210,211,212,213,217,221,225,227,230,234,236,238,240,242,244,],[-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-54,-60,-52,-55,-56,-57,145,-58,-59,-49,-50,-51,-53,145,-52,145,145,145,145,145,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,145,145,145,145,145,145,-44,-45,-46,-47,145,-60,-60,-60,-60,-60,-60,145,145,145,145,145,145,]),'MINUS':([38,39,40,41,42,43,44,45,46,48,52,60,67,69,71,72,73,74,75,76,77,78,79,80,81,82,88,94,100,101,103,119,120,139,140,141,142,143,144,145,146,147,148,149,174,176,178,180,182,184,202,203,204,205,206,207,208,209,210,211,212,213,217,221,225,227,230,234,236,238,240,242,244,],[-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-54,-60,-52,-55,-56,-57,146,-58,-59,-49,-50,-51,-53,146,-52,146,146,146,146,146,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,146,146,146,146,146,146,-44,-45,-46,-47,146,-60,-60,-60,-60,-60,-60,146,146,146,146,146,146,]),'MULTIPLY':([38,39,40,41,42,43,44,45,46,48,52,60,67,69,71,72,73,74,75,76,77,78,79,80,81,82,88,94,100,101,103,119,120,139,140,141,142,143,144,145,146,147,148,149,174,176,178,180,182,184,202,203,204,205,206,207,208,209,210,211,212,213,217,221,225,227,230,234,236,238,240,242,244,],[-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-54,-60,-52,-55,-56,-57,147,-58,-59,-49,-50,-51,-53,147,-52,147,147,147,147,147,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,147,147,147,147,147,147,147,147,-46,-47,147,-60,-60,-60,-60,-60,-60,147,147,147,147,147,147,]),'DIVIDE':([38,39,40,41,42,43,44,45,46,48,52,60,67,69,71,72,73,74,75,76,77,78,79,80,81,82,88,94,100,101,103,119,120,139,140,141,142,143,144,145,146,147,148,149,174,176,178,180,182,184,202,203,204,205,206,207,208,209,210,211,212,213,217,221,225,227,230,234,236,238,240,242,244,],[-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-54,-60,-52,-55,-56,-57,148,-58,-59,-49,-50,-51,-53,148,-52,148,148,148,148,148,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,148,148,148,148,148,148,148,148,-46,-47,148,-60,-60,-60,-60,-60,-60,148,148,148,148,148,148,]),'REMAINDER':([38,39,40,41,42,43,44,45,46,48,52,60,67,69,71,72,73,74,75,76,77,78,79,80,81,82,88,94,100,101,103,119,120,139,140,141,142,143,144,145,146,147,148,149,174,176,178,180,182,184,202,203,204,205,206,207,208,209,210,211,212,213,217,221,225,227,230,234,236,238,240,242,244,],[-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-54,-60,-52,-55,-56,-57,149,-58,-59,-49,-50,-51,-53,149,-52,149,149,149,149,149,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,149,149,149,149,149,149,-44,-45,-46,-47,149,-60,-60,-60,-60,-60,-60,149,149,149,149,149,149,]),'AND':([38,40,42,44,52,60,61,67,68,69,71,72,73,74,75,76,77,78,79,80,82,83,89,95,111,119,120,129,139,140,141,142,143,144,145,146,147,148,149,192,193,202,203,204,205,206,207,208,209,210,211,212,213,217,221,225,227,230,249,252,255,258,259,261,],[-60,-60,-60,-60,-60,-54,119,-60,-36,-52,-55,-56,-57,-43,-58,-59,-49,-50,-51,-53,-52,119,119,119,119,-60,-60,119,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-33,119,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,119,119,119,119,119,119,]),'OR':([38,40,42,44,52,60,61,67,68,69,71,72,73,74,75,76,77,78,79,80,82,83,89,95,111,119,120,129,139,140,141,142,143,144,145,146,147,148,149,192,193,202,203,204,205,206,207,208,209,210,211,212,213,217,221,225,227,230,249,252,255,258,259,261,],[-60,-60,-60,-60,-60,-54,120,-60,-36,-52,-55,-56,-57,-43,-58,-59,-49,-50,-51,-53,-52,120,120,120,120,-60,-60,120,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-33,-34,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,-60,-60,-60,-60,-60,-60,120,120,120,120,120,120,]),'R_BRACKET':([39,41,43,45,46,48,60,71,72,73,75,76,77,78,79,80,81,82,88,94,100,101,103,145,146,147,148,149,174,176,178,180,182,184,208,209,210,211,212,234,236,238,240,242,244,],[-60,-60,-60,-60,-60,-60,-54,-55,-56,-57,-58,-59,-49,-50,-51,-53,150,-52,156,162,168,169,171,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-44,-45,-46,-47,-48,263,264,265,266,267,268,]),'R_PAR':([52,54,55,56,57,58,59,60,67,68,71,72,73,74,75,76,77,78,79,80,82,105,106,107,108,109,110,111,119,120,122,123,124,125,126,128,129,139,140,141,142,143,144,145,146,147,148,149,153,155,159,161,165,167,170,172,192,193,202,203,204,205,206,207,208,209,210,211,212,263,264,265,266,267,268,],[-60,112,113,114,115,116,117,-54,-60,-36,-55,-56,-57,-43,-58,-59,-49,-50,-51,-53,-52,173,175,177,179,181,183,185,-60,-60,194,195,-93,-94,-95,196,-35,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,-60,215,216,219,220,223,224,229,232,-33,-34,-37,-38,-39,-40,-41,-42,-44,-45,-46,-47,-48,276,277,278,279,280,281,]),'AND_B':([60,69,71,72,73,75,76,],[-54,130,-55,-56,-57,-58,-59,]),'OR_B':([60,69,71,72,73,75,76,],[-54,131,-55,-56,-57,-58,-59,]),'XOR_B':([60,69,71,72,73,75,76,],[-54,132,-55,-56,-57,-58,-59,]),'SHIFT_L':([60,69,71,72,73,75,76,],[-54,133,-55,-56,-57,-58,-59,]),'SHIFT_R':([60,69,71,72,73,75,76,],[-54,134,-55,-56,-57,-58,-59,]),'INT':([64,],[124,]),'FLOAT':([64,],[125,]),'CHAR':([64,],[126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'body':([3,5,6,7,8,9,10,11,12,],[4,27,28,29,30,31,32,33,34,]),'goto':([3,5,6,7,8,9,10,11,12,],[5,5,5,5,5,5,5,5,5,]),'unset':([3,5,6,7,8,9,10,11,12,],[6,6,6,6,6,6,6,6,6,]),'print':([3,5,6,7,8,9,10,11,12,],[7,7,7,7,7,7,7,7,7,]),'exit':([3,5,6,7,8,9,10,11,12,],[8,8,8,8,8,8,8,8,8,]),'tag':([3,5,6,7,8,9,10,11,12,],[9,9,9,9,9,9,9,9,9,]),'if':([3,5,6,7,8,9,10,11,12,],[10,10,10,10,10,10,10,10,10,]),'assign':([3,5,6,7,8,9,10,11,12,],[11,11,11,11,11,11,11,11,11,]),'declaration':([3,5,6,7,8,9,10,11,12,],[12,12,12,12,12,12,12,12,12,]),'empty':([3,5,6,7,8,9,10,11,12,],[13,13,13,13,13,13,13,13,13,]),'var':([3,5,6,7,8,9,10,11,12,38,39,40,41,42,43,44,45,46,48,52,67,119,120,130,131,132,133,134,139,140,141,142,143,144,145,146,147,148,149,174,176,178,180,182,184,195,213,217,221,225,227,230,],[26,26,26,26,26,26,26,26,26,69,82,69,82,69,82,69,82,82,82,82,82,82,82,197,198,199,200,201,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,247,82,82,82,82,82,82,]),'condition':([38,40,42,44,52,67,119,120,213,217,221,225,227,230,],[61,83,89,95,111,129,192,193,249,252,255,258,259,261,]),'conversion':([38,40,42,44,],[62,84,90,96,]),'bitwise':([38,40,42,44,],[65,86,92,98,]),'relational':([38,40,42,44,52,67,119,120,213,217,221,225,227,230,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'arithmetic':([38,39,40,41,42,43,44,45,46,48,52,67,119,120,139,140,141,142,143,144,145,146,147,148,149,174,176,178,180,182,184,213,217,221,225,227,230,],[74,81,74,88,74,94,74,100,101,103,74,74,74,74,202,203,204,205,206,207,208,209,210,211,212,234,236,238,240,242,244,74,74,74,74,74,74,]),'array_access':([38,39,40,41,42,43,44,45,46,48,52,67,119,120,139,140,141,142,143,144,145,146,147,148,149,174,176,178,180,182,184,213,217,221,225,227,230,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'type':([64,],[123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> MAIN COLON body','start',3,'p_start','gramatica_asc.py',212),
  ('body -> goto body','body',2,'p_body','gramatica_asc.py',222),
  ('body -> unset body','body',2,'p_body','gramatica_asc.py',223),
  ('body -> print body','body',2,'p_body','gramatica_asc.py',224),
  ('body -> exit body','body',2,'p_body','gramatica_asc.py',225),
  ('body -> tag body','body',2,'p_body','gramatica_asc.py',226),
  ('body -> if body','body',2,'p_body','gramatica_asc.py',227),
  ('body -> assign body','body',2,'p_body','gramatica_asc.py',228),
  ('body -> declaration body','body',2,'p_body','gramatica_asc.py',229),
  ('body -> empty','body',1,'p_body_e','gramatica_asc.py',235),
  ('goto -> GOTO NAME SEMICOLON','goto',3,'p_goto','gramatica_asc.py',241),
  ('unset -> UNSET L_PAR TVAR R_PAR SEMICOLON','unset',5,'p_unset','gramatica_asc.py',247),
  ('unset -> UNSET L_PAR AVAR R_PAR SEMICOLON','unset',5,'p_unset','gramatica_asc.py',248),
  ('unset -> UNSET L_PAR VVAR R_PAR SEMICOLON','unset',5,'p_unset','gramatica_asc.py',249),
  ('unset -> UNSET L_PAR SVAR R_PAR SEMICOLON','unset',5,'p_unset','gramatica_asc.py',250),
  ('unset -> UNSET L_PAR SPVAR R_PAR SEMICOLON','unset',5,'p_unset','gramatica_asc.py',251),
  ('unset -> UNSET L_PAR RAVAR R_PAR SEMICOLON','unset',5,'p_unset','gramatica_asc.py',252),
  ('print -> PRINT L_PAR TVAR R_PAR SEMICOLON','print',5,'p_print_1','gramatica_asc.py',258),
  ('print -> PRINT L_PAR AVAR R_PAR SEMICOLON','print',5,'p_print_1','gramatica_asc.py',259),
  ('print -> PRINT L_PAR VVAR R_PAR SEMICOLON','print',5,'p_print_1','gramatica_asc.py',260),
  ('print -> PRINT L_PAR SVAR R_PAR SEMICOLON','print',5,'p_print_1','gramatica_asc.py',261),
  ('print -> PRINT L_PAR SPVAR R_PAR SEMICOLON','print',5,'p_print_1','gramatica_asc.py',262),
  ('print -> PRINT L_PAR RAVAR R_PAR SEMICOLON','print',5,'p_print_1','gramatica_asc.py',263),
  ('print -> PRINT L_PAR TVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON','print',8,'p_print_2','gramatica_asc.py',269),
  ('print -> PRINT L_PAR AVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON','print',8,'p_print_2','gramatica_asc.py',270),
  ('print -> PRINT L_PAR VVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON','print',8,'p_print_2','gramatica_asc.py',271),
  ('print -> PRINT L_PAR SVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON','print',8,'p_print_2','gramatica_asc.py',272),
  ('print -> PRINT L_PAR SPVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON','print',8,'p_print_2','gramatica_asc.py',273),
  ('print -> PRINT L_PAR RAVAR L_BRACKET arithmetic R_BRACKET R_PAR SEMICOLON','print',8,'p_print_2','gramatica_asc.py',274),
  ('exit -> EXIT SEMICOLON','exit',2,'p_exit','gramatica_asc.py',281),
  ('tag -> NAME COLON','tag',2,'p_tag','gramatica_asc.py',287),
  ('if -> IF L_PAR condition R_PAR GOTO NAME SEMICOLON','if',7,'p_if','gramatica_asc.py',293),
  ('condition -> condition AND condition','condition',3,'p_condition_1','gramatica_asc.py',299),
  ('condition -> condition OR condition','condition',3,'p_condition_1','gramatica_asc.py',300),
  ('condition -> NOT condition','condition',2,'p_condition_2','gramatica_asc.py',306),
  ('condition -> relational','condition',1,'p_condition_3','gramatica_asc.py',312),
  ('relational -> arithmetic EQUAL arithmetic','relational',3,'p_relational_1','gramatica_asc.py',318),
  ('relational -> arithmetic NOT_EQUAL arithmetic','relational',3,'p_relational_1','gramatica_asc.py',319),
  ('relational -> arithmetic GREATER arithmetic','relational',3,'p_relational_1','gramatica_asc.py',320),
  ('relational -> arithmetic LESS arithmetic','relational',3,'p_relational_1','gramatica_asc.py',321),
  ('relational -> arithmetic GREATER_EQUAL arithmetic','relational',3,'p_relational_1','gramatica_asc.py',322),
  ('relational -> arithmetic LESS_EQUAL arithmetic','relational',3,'p_relational_1','gramatica_asc.py',323),
  ('relational -> arithmetic','relational',1,'p_relational_2','gramatica_asc.py',329),
  ('arithmetic -> arithmetic PLUS arithmetic','arithmetic',3,'p_arithmetic_1','gramatica_asc.py',335),
  ('arithmetic -> arithmetic MINUS arithmetic','arithmetic',3,'p_arithmetic_1','gramatica_asc.py',336),
  ('arithmetic -> arithmetic MULTIPLY arithmetic','arithmetic',3,'p_arithmetic_1','gramatica_asc.py',337),
  ('arithmetic -> arithmetic DIVIDE arithmetic','arithmetic',3,'p_arithmetic_1','gramatica_asc.py',338),
  ('arithmetic -> arithmetic REMAINDER arithmetic','arithmetic',3,'p_arithmetic_1','gramatica_asc.py',339),
  ('arithmetic -> INTEGER','arithmetic',1,'p_arithmetic_2','gramatica_asc.py',345),
  ('arithmetic -> DECIMAL','arithmetic',1,'p_arithmetic_2','gramatica_asc.py',346),
  ('arithmetic -> STRING','arithmetic',1,'p_arithmetic_2','gramatica_asc.py',347),
  ('arithmetic -> var','arithmetic',1,'p_arithmetic_2','gramatica_asc.py',348),
  ('arithmetic -> array_access','arithmetic',1,'p_arithmetic_2','gramatica_asc.py',349),
  ('var -> TVAR','var',1,'p_var','gramatica_asc.py',355),
  ('var -> AVAR','var',1,'p_var','gramatica_asc.py',356),
  ('var -> VVAR','var',1,'p_var','gramatica_asc.py',357),
  ('var -> SVAR','var',1,'p_var','gramatica_asc.py',358),
  ('var -> RAVAR','var',1,'p_var','gramatica_asc.py',359),
  ('var -> SPVAR','var',1,'p_var','gramatica_asc.py',360),
  ('array_access -> <empty>','array_access',0,'p_array_access','gramatica_asc.py',366),
  ('assign -> TVAR ASSIGN condition SEMICOLON','assign',4,'p_assign_1','gramatica_asc.py',372),
  ('assign -> AVAR ASSIGN condition SEMICOLON','assign',4,'p_assign_1','gramatica_asc.py',373),
  ('assign -> VVAR ASSIGN condition SEMICOLON','assign',4,'p_assign_1','gramatica_asc.py',374),
  ('assign -> SVAR ASSIGN condition SEMICOLON','assign',4,'p_assign_1','gramatica_asc.py',375),
  ('assign -> TVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','gramatica_asc.py',382),
  ('assign -> AVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','gramatica_asc.py',383),
  ('assign -> VVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','gramatica_asc.py',384),
  ('assign -> SVAR ASSIGN conversion SEMICOLON','assign',4,'p_assign_2','gramatica_asc.py',385),
  ('assign -> TVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','gramatica_asc.py',391),
  ('assign -> AVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','gramatica_asc.py',392),
  ('assign -> VVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','gramatica_asc.py',393),
  ('assign -> SVAR ASSIGN READ L_PAR R_PAR SEMICOLON','assign',6,'p_assign_3','gramatica_asc.py',394),
  ('assign -> TVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','gramatica_asc.py',401),
  ('assign -> AVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','gramatica_asc.py',402),
  ('assign -> VVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','gramatica_asc.py',403),
  ('assign -> SVAR ASSIGN bitwise SEMICOLON','assign',4,'p_assign_4','gramatica_asc.py',404),
  ('assign -> TVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON','assign',7,'p_assign_5','gramatica_asc.py',410),
  ('assign -> AVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON','assign',7,'p_assign_5','gramatica_asc.py',411),
  ('assign -> VVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON','assign',7,'p_assign_5','gramatica_asc.py',412),
  ('assign -> SVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON','assign',7,'p_assign_5','gramatica_asc.py',413),
  ('assign -> SPVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON','assign',7,'p_assign_5','gramatica_asc.py',414),
  ('assign -> RAVAR L_BRACKET arithmetic R_BRACKET ASSIGN condition SEMICOLON','assign',7,'p_assign_5','gramatica_asc.py',415),
  ('bitwise -> var AND_B var','bitwise',3,'p_bitwise_1','gramatica_asc.py',421),
  ('bitwise -> var OR_B var','bitwise',3,'p_bitwise_1','gramatica_asc.py',422),
  ('bitwise -> var XOR_B var','bitwise',3,'p_bitwise_1','gramatica_asc.py',423),
  ('bitwise -> var SHIFT_L var','bitwise',3,'p_bitwise_1','gramatica_asc.py',424),
  ('bitwise -> var SHIFT_R var','bitwise',3,'p_bitwise_1','gramatica_asc.py',425),
  ('bitwise -> NOT_B TVAR','bitwise',2,'p_bitwise_2','gramatica_asc.py',431),
  ('bitwise -> NOT_B AVAR','bitwise',2,'p_bitwise_2','gramatica_asc.py',432),
  ('bitwise -> NOT_B VVAR','bitwise',2,'p_bitwise_2','gramatica_asc.py',433),
  ('bitwise -> NOT_B SVAR','bitwise',2,'p_bitwise_2','gramatica_asc.py',434),
  ('conversion -> L_PAR type R_PAR var','conversion',4,'p_conversion','gramatica_asc.py',440),
  ('type -> INT','type',1,'p_type','gramatica_asc.py',446),
  ('type -> FLOAT','type',1,'p_type','gramatica_asc.py',447),
  ('type -> CHAR','type',1,'p_type','gramatica_asc.py',448),
  ('declaration -> var','declaration',1,'p_declaration_1','gramatica_asc.py',454),
  ('declaration -> TVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','gramatica_asc.py',461),
  ('declaration -> AVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','gramatica_asc.py',462),
  ('declaration -> VVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','gramatica_asc.py',463),
  ('declaration -> SVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','gramatica_asc.py',464),
  ('declaration -> SPVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','gramatica_asc.py',465),
  ('declaration -> RAVAR ASSIGN ARRAY L_PAR R_PAR SEMICOLON','declaration',6,'p_declaration_2','gramatica_asc.py',466),
  ('declaration -> TVAR L_BRACKET arithmetic R_BRACKET SEMICOLON','declaration',5,'p_declaration_3','gramatica_asc.py',472),
  ('declaration -> AVAR L_BRACKET arithmetic R_BRACKET SEMICOLON','declaration',5,'p_declaration_3','gramatica_asc.py',473),
  ('declaration -> VVAR L_BRACKET arithmetic R_BRACKET SEMICOLON','declaration',5,'p_declaration_3','gramatica_asc.py',474),
  ('declaration -> SVAR L_BRACKET arithmetic R_BRACKET SEMICOLON','declaration',5,'p_declaration_3','gramatica_asc.py',475),
  ('declaration -> SPVAR L_BRACKET arithmetic R_BRACKET SEMICOLON','declaration',5,'p_declaration_3','gramatica_asc.py',476),
  ('declaration -> RAVAR L_BRACKET arithmetic R_BRACKET SEMICOLON','declaration',5,'p_declaration_3','gramatica_asc.py',477),
  ('empty -> <empty>','empty',0,'p_empty','gramatica_asc.py',484),
]
